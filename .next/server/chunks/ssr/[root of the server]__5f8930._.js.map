{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/MarketingContext.tsx"],"sourcesContent":["// src/contexts/MarketingContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst MarketingProgramContext = createContext<{\n  programData: any;\n  updateData: (screen: string, newData: any) => void;\n  getAISuggestions: (screen: string) => string[];\n} | undefined>(undefined);\n\n\n\nexport const MarketingProgramProvider = ({ children }) => {\n  const [programData, setProgramData] = useState({\n    goals: {\n      targetRevenue: '',\n      timeframe: '',\n      pipelineTarget: ''\n    },\n    persona: {\n      role: '',\n      industry: '',\n      challenges: [],\n      buyingCriteria: []\n    },\n    competition: {\n      primaryCompetitor: '',\n      otherCompetitors: [],\n      winRates: {}\n    },\n    messaging: {\n      valueProposition: '',\n      differentiators: []\n    },\n    budget: {\n      totalBudget: '',\n      channelAllocation: {},\n      expectedROI: ''\n    },\n    pipeline: {\n      leadScoring: {\n        criteria: [],\n        weights: {}\n      },\n      projections: {\n        monthly: [],\n        quarterly: [],\n        conversion: {}\n      }\n    },\n    events: {\n      planned: [],\n      budget: {\n        allocated: 0,\n        spent: 0,\n        projected: 0\n      },\n      metrics: {\n        attendance: 0,\n        leads: 0,\n        opportunities: 0\n      }\n    }\n  });\n\n  const updateData = (screen, newData) => {\n    setProgramData(prev => ({\n      ...prev,\n      [screen]: { ...prev[screen], ...newData }\n    }));\n  };\n\n  const getAISuggestions = (screen) => {\n    switch(screen) {\n      case 'messaging':\n        return programData.competition.primaryCompetitor \n          ? [`Differentiate from ${programData.competition.primaryCompetitor} by focusing on...`]\n          : ['Add competitor information to get targeted suggestions'];\n      case 'budget':\n        return programData.goals.targetRevenue\n          ? [`Recommended budget based on ${programData.goals.targetRevenue} target...`]\n          : ['Set revenue goals to get budget recommendations'];\n      default:\n        return [];\n    }\n  };\n\n  return (\n    <MarketingProgramContext.Provider value={{\n      programData,\n      updateData,\n      getAISuggestions\n    }}>\n      {children}\n    </MarketingProgramContext.Provider>\n  );\n};\n\nexport const useMarketingProgram = () => useContext(MarketingProgramContext);\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;AACpC;;;AAEA,MAAM,wCAA0B,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAI7B;AAIR,MAAM,2BAA2B,CAAC,EAAE,QAAQ,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC7C,OAAO;YACL,eAAe;YACf,WAAW;YACX,gBAAgB;QAClB;QACA,SAAS;YACP,MAAM;YACN,UAAU;YACV,YAAY,EAAE;YACd,gBAAgB,EAAE;QACpB;QACA,aAAa;YACX,mBAAmB;YACnB,kBAAkB,EAAE;YACpB,UAAU,CAAC;QACb;QACA,WAAW;YACT,kBAAkB;YAClB,iBAAiB,EAAE;QACrB;QACA,QAAQ;YACN,aAAa;YACb,mBAAmB,CAAC;YACpB,aAAa;QACf;QACA,UAAU;YACR,aAAa;gBACX,UAAU,EAAE;gBACZ,SAAS,CAAC;YACZ;YACA,aAAa;gBACX,SAAS,EAAE;gBACX,WAAW,EAAE;gBACb,YAAY,CAAC;YACf;QACF;QACA,QAAQ;YACN,SAAS,EAAE;YACX,QAAQ;gBACN,WAAW;gBACX,OAAO;gBACP,WAAW;YACb;YACA,SAAS;gBACP,YAAY;gBACZ,OAAO;gBACP,eAAe;YACjB;QACF;IACF;IAEA,MAAM,aAAa,CAAC,QAAQ;QAC1B,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,OAAO,EAAE;oBAAE,GAAG,IAAI,CAAC,OAAO;oBAAE,GAAG,OAAO;gBAAC;YAC1C,CAAC;IACH;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO;YACL,KAAK;gBACH,OAAO,YAAY,WAAW,CAAC,iBAAiB,GAC5C;oBAAC,CAAC,mBAAmB,EAAE,YAAY,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;iBAAC,GACrF;oBAAC;iBAAyD;YAChE,KAAK;gBACH,OAAO,YAAY,KAAK,CAAC,aAAa,GAClC;oBAAC,CAAC,4BAA4B,EAAE,YAAY,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC;iBAAC,GAC5E;oBAAC;iBAAkD;YACzD;gBACE,OAAO,EAAE;QACb;IACF;IAEA,qBACE,qKAAC,wBAAwB,QAAQ;QAAC,OAAO;YACvC;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,MAAM,sBAAsB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/WalkthroughContext.tsx"],"sourcesContent":["// src/context/WalkthroughContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst WalkthroughContext = createContext({\n  data: {\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  },\n  updateStep: (step: string, data: any) => {}\n});\n\nexport const useWalkthrough = () => useContext(WalkthroughContext);\n\nexport const WalkthroughProvider = ({ children }) => {\n  const [data, setData] = useState({\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  });\n\n  const updateStep = (step: string, newData: any) => {\n    setData(prev => ({ ...prev, [step]: newData }));\n  };\n\n  return (\n    <WalkthroughContext.Provider value={{ data, updateStep }}>\n      {children}\n    </WalkthroughContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,qCAAqC;;;;;;AACrC;;;AAEA,MAAM,mCAAqB,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAAE;IACvC,MAAM;QACJ,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IACA,YAAY,CAAC,MAAc,QAAe;AAC5C;AAEO,MAAM,iBAAiB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;AAExC,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAAE;IAC9C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IAEA,MAAM,aAAa,CAAC,MAAc;QAChC,QAAQ,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAQ,CAAC;IAC/C;IAEA,qBACE,qKAAC,mBAAmB,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAW;kBACpD;;;;;;AAGP"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/SDRContext.tsx"],"sourcesContent":["// src/context/SDRContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\ninterface Lead {\n  id: string;\n  name: string;\n  company: string;\n  status: string;\n}\n\ninterface SDRContextType {\n  leadQueue: Lead[];\n  addToQueue: (lead: Lead) => void;\n  updateLeadStatus: (id: string, status: string) => void;\n}\n\nconst SDRContext = createContext<SDRContextType | undefined>(undefined);\n\nexport const useSDR = () => {\n  const context = useContext(SDRContext);\n  if (!context) throw new Error('useSDR must be used within SDRProvider');\n  return context;\n};\n\nexport const SDRProvider = ({ children }) => {\n  const [leadQueue, setLeadQueue] = useState<Lead[]>([]);\n\n  const addToQueue = (lead: Lead) => {\n    setLeadQueue([...leadQueue, lead]);\n  };\n\n  const updateLeadStatus = (id: string, status: string) => {\n    setLeadQueue(leads => \n      leads.map(lead => \n        lead.id === id ? {...lead, status} : lead\n      )\n    );\n  };\n\n  return (\n    <SDRContext.Provider value={{ leadQueue, addToQueue, updateLeadStatus }}>\n      {children}\n    </SDRContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAC7B;;;AAeA,MAAM,2BAAa,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA8B;AAEtD,MAAM,SAAS;IACpB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;AAEO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE;IACtC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAErD,MAAM,aAAa,CAAC;QAClB,aAAa;eAAI;YAAW;SAAK;IACnC;IAEA,MAAM,mBAAmB,CAAC,IAAY;QACpC,aAAa,CAAA,QACX,MAAM,GAAG,CAAC,CAAA,OACR,KAAK,EAAE,KAAK,KAAK;oBAAC,GAAG,IAAI;oBAAE;gBAAM,IAAI;IAG3C;IAEA,qBACE,qKAAC,WAAW,QAAQ;QAAC,OAAO;YAAE;YAAW;YAAY;QAAiB;kBACnE;;;;;;AAGP"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/shared/Navbar/index.tsx"],"sourcesContent":["// src/components/shared/Navbar/index.tsx\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst Navbar = () => {\n  const router = useRouter();\n  const navItems = [\n    { label: 'Dashboard', path: '/' },\n    { label: 'Lead Scoring', path: '/lead-scoring' },\n    { label: 'Content Strategy', path: '/content-strategy' },\n    { label: 'Channel Mix', path: '/channel-mix' },\n    { label: 'Timeline', path: '/timeline' }\n  ];\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                href={item.path}\n                className={`inline-flex items-center px-4 pt-1 border-b-2 text-sm font-medium ${\n                  router.pathname === item.path\n                    ? 'border-blue-500 text-gray-900'\n                    : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'\n                }`}\n              >\n                {item.label}\n              </Link>\n            ))}\n          </div>\n          <div className=\"flex items-center\">\n            <button\n              onClick={() => router.push('/walkthrough/1')}\n              className=\"ml-4 px-4 py-2 text-sm font-medium text-blue-600 border border-blue-600 rounded-full hover:bg-blue-50\"\n            >\n              Start Walkthrough\n            </button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;"],"names":[],"mappings":"AAAA,yCAAyC;;;;;AAEzC;AACA;;;;AAEA,MAAM,SAAS;IACb,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW;QACf;YAAE,OAAO;YAAa,MAAM;QAAI;QAChC;YAAE,OAAO;YAAgB,MAAM;QAAgB;QAC/C;YAAE,OAAO;YAAoB,MAAM;QAAoB;QACvD;YAAE,OAAO;YAAe,MAAM;QAAe;QAC7C;YAAE,OAAO;YAAY,MAAM;QAAY;KACxC;IAED,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,qKAAC,qHAAA,CAAA,UAAI;gCAEH,MAAM,KAAK,IAAI;gCACf,WAAW,CAAC,kEAAkE,EAC5E,OAAO,QAAQ,KAAK,KAAK,IAAI,GACzB,kCACA,8EACJ;0CAED,KAAK,KAAK;+BARN,KAAK,IAAI;;;;;;;;;;kCAYpB,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BACC,SAAS,IAAM,OAAO,IAAI,CAAC;4BAC3B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/pages/_app.js"],"sourcesContent":["// src/pages/_app.js\nimport { MarketingProgramProvider } from '../context/MarketingContext';\nimport { WalkthroughProvider } from '../context/WalkthroughContext';\nimport { SDRProvider } from '../context/SDRContext';\nimport '../styles/globals.css';\nimport Navbar from '../components/shared/Navbar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <MarketingProgramProvider>\n      <WalkthroughProvider>\n        <SDRProvider>\n          <Navbar />\n          <Component {...pageProps} />\n        </SDRProvider>\n      </WalkthroughProvider>\n    </MarketingProgramProvider>\n  );\n}\n\nexport default MyApp;"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AACA;AAEA;;;;;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,qKAAC,4HAAA,CAAA,2BAAwB;kBACvB,cAAA,qKAAC,8HAAA,CAAA,sBAAmB;sBAClB,cAAA,qKAAC,sHAAA,CAAA,cAAW;;kCACV,qKAAC,wIAAA,CAAA,UAAM;;;;;kCACP,qKAAC;wBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;;AAKlC;uCAEe"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/components/ui/card.tsx"],"sourcesContent":["// src/components/ui/card.tsx\nexport function Card({ children, className = '', ...props }) {\n    return (\n      <div className={`bg-white rounded-lg shadow ${className}`} {...props}>\n        {children}\n      </div>\n    );\n  }\n  \n  export function CardHeader({ children, className = '', ...props }) {\n    return <div className={`p-6 pb-0 ${className}`} {...props}>{children}</div>;\n  }\n  \n  export function CardTitle({ children, className = '', ...props }) {\n    return <h3 className={`text-lg font-medium ${className}`} {...props}>{children}</h3>;\n  }\n  \n  export function CardContent({ children, className = '', ...props }) {\n    return <div className={`p-6 ${className}`} {...props}>{children}</div>;\n  }"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;;;AACtB,SAAS,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IACvD,qBACE,qKAAC;QAAI,WAAW,CAAC,2BAA2B,EAAE,WAAW;QAAG,GAAG,KAAK;kBACjE;;;;;;AAGP;AAEO,SAAS,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC/D,qBAAO,qKAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AAC9D;AAEO,SAAS,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC9D,qBAAO,qKAAC;QAAG,WAAW,CAAC,oBAAoB,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACxE;AAEO,SAAS,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAChE,qBAAO,qKAAC;QAAI,WAAW,CAAC,IAAI,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACzD"}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/features/MarketingWalkthrough/components/ContentStrategyStep/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n\nconst ContentStrategyStep = () => {\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const [activeContent, setActiveContent] = useState(null);\n  \n  // Here's Where the Magic Happens: Our Content Mix Options\n  const CONTENT_TYPES = {\n    'Thought Leadership': {\n      description: 'Build authority through expert insights',\n      formats: ['Blog Posts', 'Whitepapers', 'Industry Reports'],\n      effort: 'High',\n      frequency: 'Weekly',\n      aiSupport: ['Topic Research', 'Outline Generation', 'SEO Optimization']\n    },\n    'Case Studies': {\n      description: 'Showcase customer success stories',\n      formats: ['Written', 'Video', 'Infographic'],\n      effort: 'Medium',\n      frequency: 'Monthly',\n      aiSupport: ['Structure Templates', 'ROI Calculation', 'Story Arc']\n    },\n    'Influencer Content': {\n      description: 'Leverage industry thought leaders',\n      formats: ['Collaborations', 'Takeovers', 'Joint Content'],\n      effort: 'Medium',\n      frequency: 'Monthly',\n      aiSupport: ['Influencer Matching', 'Campaign Ideas', 'ROI Tracking']\n    },\n    'Social Media': {\n      description: 'Engage audience across platforms',\n      formats: ['Posts', 'Stories', 'Live Sessions'],\n      effort: 'Low',\n      frequency: 'Daily',\n      aiSupport: ['Post Ideas', 'Hashtag Research', 'Engagement Analysis']\n    },\n    'Lead Magnets': {\n      description: 'Generate qualified leads',\n      formats: ['Ebooks', 'Templates', 'Toolkits'],\n      effort: 'High',\n      frequency: 'Quarterly',\n      aiSupport: ['Topic Selection', 'Content Structure', 'CTA Optimization']\n    },\n    'Email Campaigns': {\n      description: 'Nurture and convert prospects',\n      formats: ['Newsletters', 'Drip Campaigns', 'Announcements'],\n      effort: 'Medium',\n      frequency: 'Weekly',\n      aiSupport: ['Subject Lines', 'Email Flow', 'Segmentation']\n    }\n  };\n\n  const ContentTypeCard = ({ type, details, isSelected, onClick }) => (\n    <div\n      className={`p-6 border rounded-lg cursor-pointer transition-colors ${\n        isSelected ? 'border-blue-600 bg-blue-50' : 'border-slate-200'\n      }`}\n      onClick={onClick}\n    >\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-slate-900\">{type}</h3>\n          <p className=\"mt-2 text-sm text-slate-600\">{details.description}</p>\n        </div>\n        <div className={`w-6 h-6 rounded-full border flex items-center justify-center ${\n          isSelected ? 'border-blue-600 bg-blue-600' : 'border-slate-300'\n        }`}>\n          {isSelected && <span className=\"text-white\">✓</span>}\n        </div>\n      </div>\n      <div className=\"mt-4 flex flex-wrap gap-2\">\n        {details.formats.map(format => (\n          <span key={format} className=\"px-2 py-1 bg-slate-100 rounded text-sm\">\n            {format}\n          </span>\n        ))}\n      </div>\n      <div className=\"mt-4 grid grid-cols-2 gap-4\">\n        <div>\n          <p className=\"text-xs text-slate-500\">Effort Level</p>\n          <p className=\"text-sm font-medium text-slate-700\">{details.effort}</p>\n        </div>\n        <div>\n          <p className=\"text-xs text-slate-500\">Frequency</p>\n          <p className=\"text-sm font-medium text-slate-700\">{details.frequency}</p>\n        </div>\n      </div>\n      <div className=\"mt-4\">\n        <p className=\"text-xs text-slate-500 mb-2\">AI Assistance Available:</p>\n        <div className=\"flex flex-wrap gap-2\">\n          {details.aiSupport.map(feature => (\n            <span key={feature} className=\"px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs\">\n              ✨ {feature}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const ContentCreationPanel = ({ contentType, details }) => {\n    const [step, setStep] = useState('plan');\n    \n    return (\n      <Card className=\"mt-6\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <span>Create {contentType}</span>\n            <button \n              onClick={() => setActiveContent(null)}\n              className=\"text-sm text-slate-500 hover:text-slate-700\"\n            >\n              ← Back to Types\n            </button>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-6\">\n            <div className=\"flex gap-2 border-b\">\n              {['plan', 'create', 'review'].map(stepName => (\n                <button\n                  key={stepName}\n                  onClick={() => setStep(stepName)}\n                  className={`px-4 py-2 ${\n                    step === stepName \n                      ? 'border-b-2 border-blue-600 text-blue-600' \n                      : 'text-slate-600'\n                  }`}\n                >\n                  {stepName.charAt(0).toUpperCase() + stepName.slice(1)}\n                </button>\n              ))}\n            </div>\n\n            {step === 'plan' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold\">Planning Assistant</h3>\n                <div className=\"grid gap-4\">\n                  {details.aiSupport.map(feature => (\n                    <button\n                      key={feature}\n                      className=\"p-4 text-left border rounded-lg hover:border-blue-300\"\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-lg\">✨</span>\n                        <span>{feature}</span>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {step === 'create' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold\">Content Creation</h3>\n                <div className=\"grid gap-4\">\n                  {details.formats.map(format => (\n                    <button\n                      key={format}\n                      className=\"p-4 text-left border rounded-lg hover:border-blue-300\"\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span>{format}</span>\n                        <span className=\"text-sm text-slate-500\">Create →</span>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {step === 'review' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold\">Quality Check</h3>\n                <div className=\"p-4 border rounded-lg bg-slate-50\">\n                  <p className=\"text-sm text-slate-600\">\n                    AI assistant will review your content for:\n                  </p>\n                  <ul className=\"mt-2 space-y-2 text-sm\">\n                    <li>• Brand voice consistency</li>\n                    <li>• Message clarity</li>\n                    <li>• Target audience alignment</li>\n                    <li>• SEO optimization</li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const content = (\n    <div className=\"space-y-6\">\n      {!activeContent ? (\n        <>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {Object.entries(CONTENT_TYPES).map(([type, details]) => (\n              <ContentTypeCard\n                key={type}\n                type={type}\n                details={details}\n                isSelected={selectedTypes.includes(type)}\n                onClick={() => {\n                  if (selectedTypes.includes(type)) {\n                    setActiveContent(type);\n                  } else {\n                    setSelectedTypes(prev => [...prev, type]);\n                  }\n                }}\n              />\n            ))}\n          </div>\n        </>\n      ) : (\n        <ContentCreationPanel \n          contentType={activeContent} \n          details={CONTENT_TYPES[activeContent]} \n        />\n      )}\n    </div>\n  );\n\n  // If being used in a walkthrough, wrap with ScreenTemplate\n  if (typeof ScreenTemplate !== 'undefined') {\n    return (\n      <ScreenTemplate\n        title=\"Choose Your Content Mix\"\n        subtitle=\"Select and customize your marketing content strategy\"\n        aiInsights={[\n          \"Influencer partnerships could amplify your reach by 3x\",\n          \"Your audience engages best with technical deep-dives\",\n          \"Mix of educational and thought leadership content recommended\"\n        ]}\n      >\n        {content}\n      </ScreenTemplate>\n    );\n  }\n\n  // Standalone version\n  return (\n    <div className=\"max-w-7xl mx-auto p-8\">\n      <h1 className=\"text-2xl font-bold text-slate-900 mb-8\">Choose Your Content Mix</h1>\n      {content}\n    </div>\n  );\n};\n\nexport default ContentStrategyStep;"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEA,MAAM,sBAAsB;IAC1B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrD,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,0DAA0D;IAC1D,MAAM,gBAAgB;QACpB,sBAAsB;YACpB,aAAa;YACb,SAAS;gBAAC;gBAAc;gBAAe;aAAmB;YAC1D,QAAQ;YACR,WAAW;YACX,WAAW;gBAAC;gBAAkB;gBAAsB;aAAmB;QACzE;QACA,gBAAgB;YACd,aAAa;YACb,SAAS;gBAAC;gBAAW;gBAAS;aAAc;YAC5C,QAAQ;YACR,WAAW;YACX,WAAW;gBAAC;gBAAuB;gBAAmB;aAAY;QACpE;QACA,sBAAsB;YACpB,aAAa;YACb,SAAS;gBAAC;gBAAkB;gBAAa;aAAgB;YACzD,QAAQ;YACR,WAAW;YACX,WAAW;gBAAC;gBAAuB;gBAAkB;aAAe;QACtE;QACA,gBAAgB;YACd,aAAa;YACb,SAAS;gBAAC;gBAAS;gBAAW;aAAgB;YAC9C,QAAQ;YACR,WAAW;YACX,WAAW;gBAAC;gBAAc;gBAAoB;aAAsB;QACtE;QACA,gBAAgB;YACd,aAAa;YACb,SAAS;gBAAC;gBAAU;gBAAa;aAAW;YAC5C,QAAQ;YACR,WAAW;YACX,WAAW;gBAAC;gBAAmB;gBAAqB;aAAmB;QACzE;QACA,mBAAmB;YACjB,aAAa;YACb,SAAS;gBAAC;gBAAe;gBAAkB;aAAgB;YAC3D,QAAQ;YACR,WAAW;YACX,WAAW;gBAAC;gBAAiB;gBAAc;aAAe;QAC5D;IACF;IAEA,MAAM,kBAAkB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,iBAC7D,qKAAC;YACC,WAAW,CAAC,uDAAuD,EACjE,aAAa,+BAA+B,oBAC5C;YACF,SAAS;;8BAET,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;;8CACC,qKAAC;oCAAG,WAAU;8CAAwC;;;;;;8CACtD,qKAAC;oCAAE,WAAU;8CAA+B,QAAQ,WAAW;;;;;;;;;;;;sCAEjE,qKAAC;4BAAI,WAAW,CAAC,6DAA6D,EAC5E,aAAa,gCAAgC,oBAC7C;sCACC,4BAAc,qKAAC;gCAAK,WAAU;0CAAa;;;;;;;;;;;;;;;;;8BAGhD,qKAAC;oBAAI,WAAU;8BACZ,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAA,uBACnB,qKAAC;4BAAkB,WAAU;sCAC1B;2BADQ;;;;;;;;;;8BAKf,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;;8CACC,qKAAC;oCAAE,WAAU;8CAAyB;;;;;;8CACtC,qKAAC;oCAAE,WAAU;8CAAsC,QAAQ,MAAM;;;;;;;;;;;;sCAEnE,qKAAC;;8CACC,qKAAC;oCAAE,WAAU;8CAAyB;;;;;;8CACtC,qKAAC;oCAAE,WAAU;8CAAsC,QAAQ,SAAS;;;;;;;;;;;;;;;;;;8BAGxE,qKAAC;oBAAI,WAAU;;sCACb,qKAAC;4BAAE,WAAU;sCAA8B;;;;;;sCAC3C,qKAAC;4BAAI,WAAU;sCACZ,QAAQ,SAAS,CAAC,GAAG,CAAC,CAAA,wBACrB,qKAAC;oCAAmB,WAAU;;wCAA2D;wCACpF;;mCADM;;;;;;;;;;;;;;;;;;;;;;IASrB,MAAM,uBAAuB,CAAC,EAAE,WAAW,EAAE,OAAO,EAAE;QACpD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAEjC,qBACE,qKAAC,kHAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,qKAAC,kHAAA,CAAA,aAAU;8BACT,cAAA,qKAAC,kHAAA,CAAA,YAAS;wBAAC,WAAU;;0CACnB,qKAAC;;oCAAK;oCAAQ;;;;;;;0CACd,qKAAC;gCACC,SAAS,IAAM,iBAAiB;gCAChC,WAAU;0CACX;;;;;;;;;;;;;;;;;8BAKL,qKAAC,kHAAA,CAAA,cAAW;8BACV,cAAA,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAI,WAAU;0CACZ;oCAAC;oCAAQ;oCAAU;iCAAS,CAAC,GAAG,CAAC,CAAA,yBAChC,qKAAC;wCAEC,SAAS,IAAM,QAAQ;wCACvB,WAAW,CAAC,UAAU,EACpB,SAAS,WACL,6CACA,kBACJ;kDAED,SAAS,MAAM,CAAC,GAAG,WAAW,KAAK,SAAS,KAAK,CAAC;uCAR9C;;;;;;;;;;4BAaV,SAAS,wBACR,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCAAG,WAAU;kDAAgB;;;;;;kDAC9B,qKAAC;wCAAI,WAAU;kDACZ,QAAQ,SAAS,CAAC,GAAG,CAAC,CAAA,wBACrB,qKAAC;gDAEC,WAAU;0DAEV,cAAA,qKAAC;oDAAI,WAAU;;sEACb,qKAAC;4DAAK,WAAU;sEAAU;;;;;;sEAC1B,qKAAC;sEAAM;;;;;;;;;;;;+CALJ;;;;;;;;;;;;;;;;4BAad,SAAS,0BACR,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCAAG,WAAU;kDAAgB;;;;;;kDAC9B,qKAAC;wCAAI,WAAU;kDACZ,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAA,uBACnB,qKAAC;gDAEC,WAAU;0DAEV,cAAA,qKAAC;oDAAI,WAAU;;sEACb,qKAAC;sEAAM;;;;;;sEACP,qKAAC;4DAAK,WAAU;sEAAyB;;;;;;;;;;;;+CALtC;;;;;;;;;;;;;;;;4BAad,SAAS,0BACR,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCAAG,WAAU;kDAAgB;;;;;;kDAC9B,qKAAC;wCAAI,WAAU;;0DACb,qKAAC;gDAAE,WAAU;0DAAyB;;;;;;0DAGtC,qKAAC;gDAAG,WAAU;;kEACZ,qKAAC;kEAAG;;;;;;kEACJ,qKAAC;kEAAG;;;;;;kEACJ,qKAAC;kEAAG;;;;;;kEACJ,qKAAC;kEAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAStB;IAEA,MAAM,wBACJ,qKAAC;QAAI,WAAU;kBACZ,CAAC,8BACA;sBACE,cAAA,qKAAC;gBAAI,WAAU;0BACZ,OAAO,OAAO,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC,MAAM,QAAQ,iBACjD,qKAAC;wBAEC,MAAM;wBACN,SAAS;wBACT,YAAY,cAAc,QAAQ,CAAC;wBACnC,SAAS;4BACP,IAAI,cAAc,QAAQ,CAAC,OAAO;gCAChC,iBAAiB;4BACnB,OAAO;gCACL,iBAAiB,CAAA,OAAQ;2CAAI;wCAAM;qCAAK;4BAC1C;wBACF;uBAVK;;;;;;;;;;0CAgBb,qKAAC;YACC,aAAa;YACb,SAAS,aAAa,CAAC,cAAc;;;;;;;;;;;IAM7C,2DAA2D;IAC3D,IAAI,OAAO,mBAAmB,aAAa;QACzC,qBACE,qKAAC;YACC,OAAM;YACN,UAAS;YACT,YAAY;gBACV;gBACA;gBACA;aACD;sBAEA;;;;;;IAGP;IAEA,qBAAqB;IACrB,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAAyC;;;;;;YACtD;;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 1132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1138, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/shared/UIComponents.js"],"sourcesContent":["// src/components/shared/UIComponents.js\nimport React from 'react';\n\nexport function ProgressBar({ currentStep, totalSteps }) {\n  return (\n    <div className=\"w-full h-2 bg-slate-200 rounded\">\n      <div\n        className=\"h-full bg-blue-600 rounded\"\n        style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n      />\n    </div>\n  );\n}\n\nexport function AIInsight({ insights }) {\n  if (!insights?.length) return null;\n  \n  return (\n    <div className=\"mt-6 p-4 bg-slate-50 rounded-lg border border-slate-200\">\n      <p className=\"text-sm text-slate-600\">\n        ✨ {insights[0]}\n      </p>\n    </div>\n  );\n}\n\nexport function NavigationButtons({ onBack, onNext, currentStep, totalSteps, isWalkthrough, nextText }) {\n  return (\n    <div className=\"flex justify-between items-center w-full mt-8\">\n      {onBack && (\n        <button\n          onClick={onBack}\n          className=\"px-6 py-2 rounded-full border border-blue-600 text-blue-600\"\n        >\n          ← Back\n        </button>\n      )}\n      {!onBack && <div />}\n\n      {isWalkthrough && currentStep && totalSteps && (\n        <span className=\"text-slate-500\">Step {currentStep} of {totalSteps}</span>\n      )}\n\n      {onNext && (\n        <button\n          onClick={onNext}\n          className=\"px-6 py-2 rounded-full bg-blue-600 text-white\"\n        >\n          {nextText || 'Next →'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport function MetricsCard({ title, metrics }) {\n  return (\n    <div className=\"p-6 bg-white rounded-lg border border-slate-200\">\n      <h3 className=\"text-lg font-semibold text-slate-900 mb-4\">{title}</h3>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {Object.entries(metrics).map(([label, value]) => (\n          <div key={label}>\n            <p className=\"text-sm text-slate-600\">{label}</p>\n            <p className=\"text-2xl font-bold text-slate-900\">{value}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const ScreenTemplate = ({\n  title,\n  subtitle,\n  currentStep,\n  totalSteps,\n  aiInsights,\n  onNext,\n  onBack,\n  isWalkthrough = false,\n  nextText,\n  children\n}) => {\n  return (\n    <div className=\"max-w-4xl mx-auto p-8\">\n      {isWalkthrough && currentStep && totalSteps && (\n        <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      )}\n\n      <div className=\"mt-16\">\n        <h1 className=\"text-2xl font-bold text-slate-900\">{title}</h1>\n        {subtitle && <p className=\"mt-2 text-slate-600\">{subtitle}</p>}\n      </div>\n\n      \n{aiInsights && aiInsights.length > 0 && (\n  <div className=\"mt-8 mb-8\"> \n    <AIInsight insights={aiInsights} />\n  </div>\n)}\n\n      {children}\n\n      <NavigationButtons\n        onBack={onBack}\n        onNext={onNext}\n        currentStep={currentStep}\n        totalSteps={totalSteps}\n        isWalkthrough={isWalkthrough}\n        nextText={nextText}\n      />\n    </div>\n  );\n};"],"names":[],"mappings":"AAAA,wCAAwC;;;;;;;;;AACxC;;;AAEO,SAAS,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE;IACrD,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,GAAG,AAAC,cAAc,aAAc,IAAI,CAAC,CAAC;YAAC;;;;;;;;;;;AAI/D;AAEO,SAAS,UAAU,EAAE,QAAQ,EAAE;IACpC,IAAI,CAAC,UAAU,QAAQ,OAAO;IAE9B,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAE,WAAU;;gBAAyB;gBACjC,QAAQ,CAAC,EAAE;;;;;;;;;;;;AAItB;AAEO,SAAS,kBAAkB,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE;IACpG,qBACE,qKAAC;QAAI,WAAU;;YACZ,wBACC,qKAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;YAIF,CAAC,wBAAU,qKAAC;;;;;YAEZ,iBAAiB,eAAe,4BAC/B,qKAAC;gBAAK,WAAU;;oBAAiB;oBAAM;oBAAY;oBAAK;;;;;;;YAGzD,wBACC,qKAAC;gBACC,SAAS;gBACT,WAAU;0BAET,YAAY;;;;;;;;;;;;AAKvB;AAEO,SAAS,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE;IAC5C,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAC3D,qKAAC;gBAAI,WAAU;0BACZ,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,MAAM,iBAC1C,qKAAC;;0CACC,qKAAC;gCAAE,WAAU;0CAA0B;;;;;;0CACvC,qKAAC;gCAAE,WAAU;0CAAqC;;;;;;;uBAF1C;;;;;;;;;;;;;;;;AAQpB;AAEO,MAAM,iBAAiB,CAAC,EAC7B,KAAK,EACL,QAAQ,EACR,WAAW,EACX,UAAU,EACV,UAAU,EACV,MAAM,EACN,MAAM,EACN,gBAAgB,KAAK,EACrB,QAAQ,EACR,QAAQ,EACT;IACC,qBACE,qKAAC;QAAI,WAAU;;YACZ,iBAAiB,eAAe,4BAC/B,qKAAC;gBAAY,aAAa;gBAAa,YAAY;;;;;;0BAGrD,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;kCAAqC;;;;;;oBAClD,0BAAY,qKAAC;wBAAE,WAAU;kCAAuB;;;;;;;;;;;;YAIxD,cAAc,WAAW,MAAM,GAAG,mBACjC,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBAAU,UAAU;;;;;;;;;;;YAIlB;0BAED,qKAAC;gBACC,QAAQ;gBACR,QAAQ;gBACR,aAAa;gBACb,YAAY;gBACZ,eAAe;gBACf,UAAU;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 1358, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1364, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/pages/content-strategy.tsx"],"sourcesContent":["// src/pages/content-strategy.tsx\nimport React from 'react';\nimport ContentStrategyStep from '../components/features/MarketingWalkthrough/components/ContentStrategyStep';\nimport { ScreenTemplate } from '../components/shared/UIComponents';\n\nconst ContentStrategyPage = () => (\n  <ScreenTemplate\n    title=\"Content Strategy\"\n    subtitle=\"Plan and manage your content creation\"\n    aiInsights={[\n      \"Based on your industry, long-form content performs best for lead generation\",\n      \"Your audience responds well to technical deep-dives and case studies\",\n      \"Consider increasing webinar frequency based on engagement metrics\"\n    ]}\n    isWalkthrough={false}\n  >\n    <ContentStrategyStep />\n  </ScreenTemplate>\n);\n\nexport default ContentStrategyPage;"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AAEjC;AACA;;;;AAEA,MAAM,sBAAsB,kBAC1B,qKAAC,oIAAA,CAAA,iBAAc;QACb,OAAM;QACN,UAAS;QACT,YAAY;YACV;YACA;YACA;SACD;QACD,eAAe;kBAEf,cAAA,qKAAC,6LAAA,CAAA,UAAmB;;;;;;;;;;uCAIT"}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}