{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/context/MarketingContext.tsx"],"sourcesContent":["// src/contexts/MarketingContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst MarketingProgramContext = createContext<{\n  programData: any;\n  updateData: (screen: string, newData: any) => void;\n  getAISuggestions: (screen: string) => string[];\n} | undefined>(undefined);\n\n\n\nexport const MarketingProgramProvider = ({ children }) => {\n  const [programData, setProgramData] = useState({\n    goals: {\n      targetRevenue: '',\n      timeframe: '',\n      pipelineTarget: ''\n    },\n    persona: {\n      role: '',\n      industry: '',\n      challenges: [],\n      buyingCriteria: []\n    },\n    competition: {\n      primaryCompetitor: '',\n      otherCompetitors: [],\n      winRates: {}\n    },\n    messaging: {\n      valueProposition: '',\n      differentiators: []\n    },\n    budget: {\n      totalBudget: '',\n      channelAllocation: {},\n      expectedROI: ''\n    },\n    pipeline: {\n      leadScoring: {\n        criteria: [],\n        weights: {}\n      },\n      projections: {\n        monthly: [],\n        quarterly: [],\n        conversion: {}\n      }\n    },\n    events: {\n      planned: [],\n      budget: {\n        allocated: 0,\n        spent: 0,\n        projected: 0\n      },\n      metrics: {\n        attendance: 0,\n        leads: 0,\n        opportunities: 0\n      }\n    }\n  });\n\n  const updateData = (screen, newData) => {\n    setProgramData(prev => ({\n      ...prev,\n      [screen]: { ...prev[screen], ...newData }\n    }));\n  };\n\n  const getAISuggestions = (screen) => {\n    switch(screen) {\n      case 'messaging':\n        return programData.competition.primaryCompetitor \n          ? [`Differentiate from ${programData.competition.primaryCompetitor} by focusing on...`]\n          : ['Add competitor information to get targeted suggestions'];\n      case 'budget':\n        return programData.goals.targetRevenue\n          ? [`Recommended budget based on ${programData.goals.targetRevenue} target...`]\n          : ['Set revenue goals to get budget recommendations'];\n      default:\n        return [];\n    }\n  };\n\n  return (\n    <MarketingProgramContext.Provider value={{\n      programData,\n      updateData,\n      getAISuggestions\n    }}>\n      {children}\n    </MarketingProgramContext.Provider>\n  );\n};\n\nexport const useMarketingProgram = () => useContext(MarketingProgramContext);\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;AACpC;;;AAEA,MAAM,wCAA0B,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAI7B;AAIR,MAAM,2BAA2B,CAAC,EAAE,QAAQ,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC7C,OAAO;YACL,eAAe;YACf,WAAW;YACX,gBAAgB;QAClB;QACA,SAAS;YACP,MAAM;YACN,UAAU;YACV,YAAY,EAAE;YACd,gBAAgB,EAAE;QACpB;QACA,aAAa;YACX,mBAAmB;YACnB,kBAAkB,EAAE;YACpB,UAAU,CAAC;QACb;QACA,WAAW;YACT,kBAAkB;YAClB,iBAAiB,EAAE;QACrB;QACA,QAAQ;YACN,aAAa;YACb,mBAAmB,CAAC;YACpB,aAAa;QACf;QACA,UAAU;YACR,aAAa;gBACX,UAAU,EAAE;gBACZ,SAAS,CAAC;YACZ;YACA,aAAa;gBACX,SAAS,EAAE;gBACX,WAAW,EAAE;gBACb,YAAY,CAAC;YACf;QACF;QACA,QAAQ;YACN,SAAS,EAAE;YACX,QAAQ;gBACN,WAAW;gBACX,OAAO;gBACP,WAAW;YACb;YACA,SAAS;gBACP,YAAY;gBACZ,OAAO;gBACP,eAAe;YACjB;QACF;IACF;IAEA,MAAM,aAAa,CAAC,QAAQ;QAC1B,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,OAAO,EAAE;oBAAE,GAAG,IAAI,CAAC,OAAO;oBAAE,GAAG,OAAO;gBAAC;YAC1C,CAAC;IACH;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO;YACL,KAAK;gBACH,OAAO,YAAY,WAAW,CAAC,iBAAiB,GAC5C;oBAAC,CAAC,mBAAmB,EAAE,YAAY,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;iBAAC,GACrF;oBAAC;iBAAyD;YAChE,KAAK;gBACH,OAAO,YAAY,KAAK,CAAC,aAAa,GAClC;oBAAC,CAAC,4BAA4B,EAAE,YAAY,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC;iBAAC,GAC5E;oBAAC;iBAAkD;YACzD;gBACE,OAAO,EAAE;QACb;IACF;IAEA,qBACE,qKAAC,wBAAwB,QAAQ;QAAC,OAAO;YACvC;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,MAAM,sBAAsB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/context/WalkthroughContext.tsx"],"sourcesContent":["// src/context/WalkthroughContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst WalkthroughContext = createContext({\n  data: {\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  },\n  updateStep: (step: string, data: any) => {}\n});\n\nexport const useWalkthrough = () => useContext(WalkthroughContext);\n\nexport const WalkthroughProvider = ({ children }) => {\n  const [data, setData] = useState({\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  });\n\n  const updateStep = (step: string, newData: any) => {\n    setData(prev => ({ ...prev, [step]: newData }));\n  };\n\n  return (\n    <WalkthroughContext.Provider value={{ data, updateStep }}>\n      {children}\n    </WalkthroughContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,qCAAqC;;;;;;AACrC;;;AAEA,MAAM,mCAAqB,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAAE;IACvC,MAAM;QACJ,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IACA,YAAY,CAAC,MAAc,QAAe;AAC5C;AAEO,MAAM,iBAAiB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;AAExC,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAAE;IAC9C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IAEA,MAAM,aAAa,CAAC,MAAc;QAChC,QAAQ,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAQ,CAAC;IAC/C;IAEA,qBACE,qKAAC,mBAAmB,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAW;kBACpD;;;;;;AAGP"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/context/SDRContext.tsx"],"sourcesContent":["// src/context/SDRContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\ninterface Lead {\n  id: string;\n  name: string;\n  company: string;\n  status: string;\n}\n\ninterface SDRContextType {\n  leadQueue: Lead[];\n  addToQueue: (lead: Lead) => void;\n  updateLeadStatus: (id: string, status: string) => void;\n}\n\nconst SDRContext = createContext<SDRContextType | undefined>(undefined);\n\nexport const useSDR = () => {\n  const context = useContext(SDRContext);\n  if (!context) throw new Error('useSDR must be used within SDRProvider');\n  return context;\n};\n\nexport const SDRProvider = ({ children }) => {\n  const [leadQueue, setLeadQueue] = useState<Lead[]>([]);\n\n  const addToQueue = (lead: Lead) => {\n    setLeadQueue([...leadQueue, lead]);\n  };\n\n  const updateLeadStatus = (id: string, status: string) => {\n    setLeadQueue(leads => \n      leads.map(lead => \n        lead.id === id ? {...lead, status} : lead\n      )\n    );\n  };\n\n  return (\n    <SDRContext.Provider value={{ leadQueue, addToQueue, updateLeadStatus }}>\n      {children}\n    </SDRContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAC7B;;;AAeA,MAAM,2BAAa,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA8B;AAEtD,MAAM,SAAS;IACpB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;AAEO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE;IACtC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAErD,MAAM,aAAa,CAAC;QAClB,aAAa;eAAI;YAAW;SAAK;IACnC;IAEA,MAAM,mBAAmB,CAAC,IAAY;QACpC,aAAa,CAAA,QACX,MAAM,GAAG,CAAC,CAAA,OACR,KAAK,EAAE,KAAK,KAAK;oBAAC,GAAG,IAAI;oBAAE;gBAAM,IAAI;IAG3C;IAEA,qBACE,qKAAC,WAAW,QAAQ;QAAC,OAAO;YAAE;YAAW;YAAY;QAAiB;kBACnE;;;;;;AAGP"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/components/shared/Navbar/index.tsx"],"sourcesContent":["// src/components/shared/Navbar/index.tsx\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst Navbar = () => {\n  const router = useRouter();\n  const navItems = [\n    { label: 'Dashboard', path: '/' },\n    { label: 'Lead Scoring', path: '/lead-scoring' },\n    { label: 'Content Strategy', path: '/content-strategy' },\n    { label: 'Channel Mix', path: '/channel-mix' },\n    { label: 'Timeline', path: '/timeline' }\n  ];\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                href={item.path}\n                className={`inline-flex items-center px-4 pt-1 border-b-2 text-sm font-medium ${\n                  router.pathname === item.path\n                    ? 'border-blue-500 text-gray-900'\n                    : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'\n                }`}\n              >\n                {item.label}\n              </Link>\n            ))}\n          </div>\n          <div className=\"flex items-center\">\n            <button\n              onClick={() => router.push('/walkthrough/1')}\n              className=\"ml-4 px-4 py-2 text-sm font-medium text-blue-600 border border-blue-600 rounded-full hover:bg-blue-50\"\n            >\n              Start Walkthrough\n            </button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;"],"names":[],"mappings":"AAAA,yCAAyC;;;;;AAEzC;AACA;;;;AAEA,MAAM,SAAS;IACb,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW;QACf;YAAE,OAAO;YAAa,MAAM;QAAI;QAChC;YAAE,OAAO;YAAgB,MAAM;QAAgB;QAC/C;YAAE,OAAO;YAAoB,MAAM;QAAoB;QACvD;YAAE,OAAO;YAAe,MAAM;QAAe;QAC7C;YAAE,OAAO;YAAY,MAAM;QAAY;KACxC;IAED,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,qKAAC,qHAAA,CAAA,UAAI;gCAEH,MAAM,KAAK,IAAI;gCACf,WAAW,CAAC,kEAAkE,EAC5E,OAAO,QAAQ,KAAK,KAAK,IAAI,GACzB,kCACA,8EACJ;0CAED,KAAK,KAAK;+BARN,KAAK,IAAI;;;;;;;;;;kCAYpB,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BACC,SAAS,IAAM,OAAO,IAAI,CAAC;4BAC3B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/pages/_app.js"],"sourcesContent":["// src/pages/_app.js\nimport { MarketingProgramProvider } from '../context/MarketingContext';\nimport { WalkthroughProvider } from '../context/WalkthroughContext';\nimport { SDRProvider } from '../context/SDRContext';\nimport '../styles/globals.css';\nimport Navbar from '../components/shared/Navbar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <MarketingProgramProvider>\n      <WalkthroughProvider>\n        <SDRProvider>\n          <Navbar />\n          <Component {...pageProps} />\n        </SDRProvider>\n      </WalkthroughProvider>\n    </MarketingProgramProvider>\n  );\n}\n\nexport default MyApp;"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AACA;AAEA;;;;;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,qKAAC,4HAAA,CAAA,2BAAwB;kBACvB,cAAA,qKAAC,8HAAA,CAAA,sBAAmB;sBAClB,cAAA,qKAAC,sHAAA,CAAA,cAAW;;kCACV,qKAAC,wIAAA,CAAA,UAAM;;;;;kCACP,qKAAC;wBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;;AAKlC;uCAEe"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/components/ui/card.tsx"],"sourcesContent":["// src/components/ui/card.tsx\nexport function Card({ children, className = '', ...props }) {\n    return (\n      <div className={`bg-white rounded-lg shadow ${className}`} {...props}>\n        {children}\n      </div>\n    );\n  }\n  \n  export function CardHeader({ children, className = '', ...props }) {\n    return <div className={`p-6 pb-0 ${className}`} {...props}>{children}</div>;\n  }\n  \n  export function CardTitle({ children, className = '', ...props }) {\n    return <h3 className={`text-lg font-medium ${className}`} {...props}>{children}</h3>;\n  }\n  \n  export function CardContent({ children, className = '', ...props }) {\n    return <div className={`p-6 ${className}`} {...props}>{children}</div>;\n  }"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;;;AACtB,SAAS,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IACvD,qBACE,qKAAC;QAAI,WAAW,CAAC,2BAA2B,EAAE,WAAW;QAAG,GAAG,KAAK;kBACjE;;;;;;AAGP;AAEO,SAAS,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC/D,qBAAO,qKAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AAC9D;AAEO,SAAS,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC9D,qBAAO,qKAAC;QAAG,WAAW,CAAC,oBAAoB,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACxE;AAEO,SAAS,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAChE,qBAAO,qKAAC;QAAI,WAAW,CAAC,IAAI,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACzD"}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/components/features/MarketingWalkthrough/components/ChannelSelectionStep/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Utility function for calculations\nconst calculateMetrics = (channel) => {\n  const cpl = channel.leads > 0 ? channel.spend / channel.leads : 0;\n  const cpo = channel.opportunities > 0 ? channel.spend / channel.opportunities : 0;\n  const cpd = channel.deals > 0 ? channel.spend / channel.deals : 0;\n  const roi = channel.spend > 0 ? (channel.revenue - channel.spend) / channel.spend : 0;\n  const conversionRate = channel.leads > 0 ? (channel.deals / channel.leads) * 100 : 0;\n\n  return {\n    cpl: cpl.toFixed(2),\n    cpo: cpo.toFixed(2),\n    cpd: cpd.toFixed(2),\n    roi: (roi * 100).toFixed(1),\n    conversionRate: conversionRate.toFixed(1)\n  };\n};\n\nconst AIInsightPanel = ({ channels }) => {\n  const insights = useMemo(() => {\n    if (!channels.length) return [];\n    \n    const insights = [];\n    const totalSpend = channels.reduce((sum, channel) => sum + channel.spend, 0);\n    const bestROI = channels.reduce((best, channel) => {\n      const roi = channel.revenue > 0 ? (channel.revenue - channel.spend) / channel.spend : 0;\n      return roi > best.roi ? { name: channel.name, roi } : best;\n    }, { name: '', roi: -Infinity });\n    \n    const avgCPL = channels.reduce((sum, channel) => {\n      return sum + (channel.leads > 0 ? channel.spend / channel.leads : 0);\n    }, 0) / channels.length;\n\n    // Add budget allocation insight\n    insights.push({\n      icon: \"💰\",\n      text: `Total marketing investment of $${totalSpend.toLocaleString()} across ${channels.length} channels`\n    });\n\n    // Add ROI performance insight\n    if (bestROI.roi > 0) {\n      insights.push({\n        icon: \"🎯\",\n        text: `${bestROI.name} is your best performing channel with ${(bestROI.roi * 100).toFixed(1)}% ROI`\n      });\n    }\n\n    // Add cost efficiency insight\n    insights.push({\n      icon: \"📊\",\n      text: `Average cost per lead across channels is $${avgCPL.toFixed(2)}`\n    });\n\n    // Add optimization recommendation\n    const lowPerformers = channels.filter(channel => {\n      const metrics = calculateMetrics(channel);\n      return parseFloat(metrics.roi) < 50;\n    });\n\n    if (lowPerformers.length > 0) {\n      insights.push({\n        icon: \"💡\",\n        text: `Consider optimizing ${lowPerformers.length} channels showing ROI below 50%`\n      });\n    }\n\n    return insights;\n  }, [channels]);\n\n  return (\n    <Card className=\"mb-8 bg-slate-50\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <span className=\"text-blue-600\">✨</span>\n          AI Insights\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {insights.map((insight, index) => (\n            <div key={index} className=\"flex items-start gap-3\">\n              <span className=\"text-lg\">{insight.icon}</span>\n              <p className=\"text-slate-600\">{insight.text}</p>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst MarketingROICalculator = () => {\n  const [channels, setChannels] = useState([\n    {\n      name: 'Content Marketing',\n      spend: 5000,\n      leads: 250,\n      opportunities: 50,\n      deals: 10,\n      revenue: 50000,\n      timeframe: 'Q1'\n    },\n    {\n      name: 'Paid Search',\n      spend: 3000,\n      leads: 150,\n      opportunities: 30,\n      deals: 6,\n      revenue: 30000,\n      timeframe: 'Q1'\n    }\n  ]);\n\n  const handleChannelUpdate = (index, field, value) => {\n    const updatedChannels = [...channels];\n    updatedChannels[index] = {\n      ...updatedChannels[index],\n      [field]: Number(value)\n    };\n    setChannels(updatedChannels);\n  };\n\n  const ChannelMetrics = ({ channel, index }) => {\n    const metrics = calculateMetrics(channel);\n\n    return (\n      <Card className=\"mb-6\">\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-xl font-bold text-slate-900\">\n            {channel.name}\n          </CardTitle>\n          <span className=\"text-sm text-slate-500\">{channel.timeframe}</span>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n            <div>\n              <p className=\"text-sm text-slate-600\">Cost per Lead</p>\n              <p className=\"text-2xl font-bold text-slate-900\">${metrics.cpl}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-slate-600\">Cost per Opportunity</p>\n              <p className=\"text-2xl font-bold text-slate-900\">${metrics.cpo}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-slate-600\">Cost per Deal</p>\n              <p className=\"text-2xl font-bold text-slate-900\">${metrics.cpd}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-slate-600\">ROI</p>\n              <p className=\"text-2xl font-bold text-green-600\">{metrics.roi}%</p>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n            <div className=\"p-4 bg-slate-50 rounded\">\n              <label className=\"text-sm text-slate-600\">Spend</label>\n              <input\n                type=\"number\"\n                value={channel.spend}\n                onChange={(e) => handleChannelUpdate(index, 'spend', e.target.value)}\n                className=\"w-full mt-1 p-2 border rounded bg-white\"\n              />\n            </div>\n            <div className=\"p-4 bg-slate-50 rounded\">\n              <label className=\"text-sm text-slate-600\">Leads</label>\n              <input\n                type=\"number\"\n                value={channel.leads}\n                onChange={(e) => handleChannelUpdate(index, 'leads', e.target.value)}\n                className=\"w-full mt-1 p-2 border rounded bg-white\"\n              />\n            </div>\n            <div className=\"p-4 bg-slate-50 rounded\">\n              <label className=\"text-sm text-slate-600\">Opportunities</label>\n              <input\n                type=\"number\"\n                value={channel.opportunities}\n                onChange={(e) => handleChannelUpdate(index, 'opportunities', e.target.value)}\n                className=\"w-full mt-1 p-2 border rounded bg-white\"\n              />\n            </div>\n            <div className=\"p-4 bg-slate-50 rounded\">\n              <label className=\"text-sm text-slate-600\">Deals</label>\n              <input\n                type=\"number\"\n                value={channel.deals}\n                onChange={(e) => handleChannelUpdate(index, 'deals', e.target.value)}\n                className=\"w-full mt-1 p-2 border rounded bg-white\"\n              />\n            </div>\n            <div className=\"p-4 bg-slate-50 rounded\">\n              <label className=\"text-sm text-slate-600\">Revenue</label>\n              <input\n                type=\"number\"\n                value={channel.revenue}\n                onChange={(e) => handleChannelUpdate(index, 'revenue', e.target.value)}\n                className=\"w-full mt-1 p-2 border rounded bg-white\"\n              />\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const PerformanceChart = () => {\n    const chartData = channels.map(channel => ({\n      name: channel.name,\n      roi: parseFloat(calculateMetrics(channel).roi),\n      cpl: parseFloat(calculateMetrics(channel).cpl),\n      conversionRate: parseFloat(calculateMetrics(channel).conversionRate)\n    }));\n\n    return (\n      <div className=\"h-96\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart data={chartData}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis yAxisId=\"left\" />\n            <YAxis yAxisId=\"right\" orientation=\"right\" />\n            <Tooltip />\n            <Legend />\n            <Line\n              yAxisId=\"left\"\n              type=\"monotone\"\n              dataKey=\"roi\"\n              stroke=\"#22c55e\"\n              name=\"ROI %\"\n            />\n            <Line\n              yAxisId=\"right\"\n              type=\"monotone\"\n              dataKey=\"cpl\"\n              stroke=\"#3b82f6\"\n              name=\"Cost per Lead ($)\"\n            />\n            <Line\n              yAxisId=\"right\"\n              type=\"monotone\"\n              dataKey=\"conversionRate\"\n              stroke=\"#f59e0b\"\n              name=\"Conversion Rate %\"\n            />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-8\">\n      <div className=\"flex justify-between items-center mb-8\">\n        <h1 className=\"text-2xl font-bold text-slate-900\">\n          Marketing ROI Calculator\n        </h1>\n        <button\n          onClick={() => setChannels([...channels, {\n            name: `Channel ${channels.length + 1}`,\n            spend: 0,\n            leads: 0,\n            opportunities: 0,\n            deals: 0,\n            revenue: 0,\n            timeframe: 'Q1'\n          }])}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n        >\n          Add Channel\n        </button>\n      </div>\n\n      <AIInsightPanel channels={channels} />\n\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <CardTitle>Performance Overview</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <PerformanceChart />\n        </CardContent>\n      </Card>\n\n      <div className=\"space-y-6\">\n        {channels.map((channel, index) => (\n          <ChannelMetrics key={index} channel={channel} index={index} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default MarketingROICalculator;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1225, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/components/shared/UIComponents.js"],"sourcesContent":["// src/components/shared/UIComponents.js\nimport React from 'react';\n\nexport function ProgressBar({ currentStep, totalSteps }) {\n  return (\n    <div className=\"w-full h-2 bg-slate-200 rounded\">\n      <div\n        className=\"h-full bg-blue-600 rounded\"\n        style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n      />\n    </div>\n  );\n}\n\nexport function AIInsight({ insights }) {\n  if (!insights?.length) return null;\n  \n  return (\n    <div className=\"mt-6 p-4 bg-slate-50 rounded-lg border border-slate-200\">\n      <p className=\"text-sm text-slate-600\">\n        ✨ {insights[0]}\n      </p>\n    </div>\n  );\n}\n\nexport function NavigationButtons({ onBack, onNext, currentStep, totalSteps, isWalkthrough, nextText }) {\n  return (\n    <div className=\"flex justify-between items-center w-full mt-8\">\n      {onBack && (\n        <button\n          onClick={onBack}\n          className=\"px-6 py-2 rounded-full border border-blue-600 text-blue-600\"\n        >\n          ← Back\n        </button>\n      )}\n      {!onBack && <div />}\n\n      {isWalkthrough && currentStep && totalSteps && (\n        <span className=\"text-slate-500\">Step {currentStep} of {totalSteps}</span>\n      )}\n\n      {onNext && (\n        <button\n          onClick={onNext}\n          className=\"px-6 py-2 rounded-full bg-blue-600 text-white\"\n        >\n          {nextText || 'Next →'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport function MetricsCard({ title, metrics }) {\n  return (\n    <div className=\"p-6 bg-white rounded-lg border border-slate-200\">\n      <h3 className=\"text-lg font-semibold text-slate-900 mb-4\">{title}</h3>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {Object.entries(metrics).map(([label, value]) => (\n          <div key={label}>\n            <p className=\"text-sm text-slate-600\">{label}</p>\n            <p className=\"text-2xl font-bold text-slate-900\">{value}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const ScreenTemplate = ({\n  title,\n  subtitle,\n  currentStep,\n  totalSteps,\n  aiInsights,\n  onNext,\n  onBack,\n  isWalkthrough = false,\n  nextText,\n  children\n}) => {\n  return (\n    <div className=\"max-w-4xl mx-auto p-8\">\n      {isWalkthrough && currentStep && totalSteps && (\n        <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      )}\n\n      <div className=\"mt-16\">\n        <h1 className=\"text-2xl font-bold text-slate-900\">{title}</h1>\n        {subtitle && <p className=\"mt-2 text-slate-600\">{subtitle}</p>}\n      </div>\n\n      \n{aiInsights && aiInsights.length > 0 && (\n  <div className=\"mt-8 mb-8\"> \n    <AIInsight insights={aiInsights} />\n  </div>\n)}\n\n      {children}\n\n      <NavigationButtons\n        onBack={onBack}\n        onNext={onNext}\n        currentStep={currentStep}\n        totalSteps={totalSteps}\n        isWalkthrough={isWalkthrough}\n        nextText={nextText}\n      />\n    </div>\n  );\n};"],"names":[],"mappings":"AAAA,wCAAwC;;;;;;;;;AACxC;;;AAEO,SAAS,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE;IACrD,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,GAAG,AAAC,cAAc,aAAc,IAAI,CAAC,CAAC;YAAC;;;;;;;;;;;AAI/D;AAEO,SAAS,UAAU,EAAE,QAAQ,EAAE;IACpC,IAAI,CAAC,UAAU,QAAQ,OAAO;IAE9B,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAE,WAAU;;gBAAyB;gBACjC,QAAQ,CAAC,EAAE;;;;;;;;;;;;AAItB;AAEO,SAAS,kBAAkB,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE;IACpG,qBACE,qKAAC;QAAI,WAAU;;YACZ,wBACC,qKAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;YAIF,CAAC,wBAAU,qKAAC;;;;;YAEZ,iBAAiB,eAAe,4BAC/B,qKAAC;gBAAK,WAAU;;oBAAiB;oBAAM;oBAAY;oBAAK;;;;;;;YAGzD,wBACC,qKAAC;gBACC,SAAS;gBACT,WAAU;0BAET,YAAY;;;;;;;;;;;;AAKvB;AAEO,SAAS,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE;IAC5C,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAC3D,qKAAC;gBAAI,WAAU;0BACZ,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,MAAM,iBAC1C,qKAAC;;0CACC,qKAAC;gCAAE,WAAU;0CAA0B;;;;;;0CACvC,qKAAC;gCAAE,WAAU;0CAAqC;;;;;;;uBAF1C;;;;;;;;;;;;;;;;AAQpB;AAEO,MAAM,iBAAiB,CAAC,EAC7B,KAAK,EACL,QAAQ,EACR,WAAW,EACX,UAAU,EACV,UAAU,EACV,MAAM,EACN,MAAM,EACN,gBAAgB,KAAK,EACrB,QAAQ,EACR,QAAQ,EACT;IACC,qBACE,qKAAC;QAAI,WAAU;;YACZ,iBAAiB,eAAe,4BAC/B,qKAAC;gBAAY,aAAa;gBAAa,YAAY;;;;;;0BAGrD,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;kCAAqC;;;;;;oBAClD,0BAAY,qKAAC;wBAAE,WAAU;kCAAuB;;;;;;;;;;;;YAIxD,cAAc,WAAW,MAAM,GAAG,mBACjC,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBAAU,UAAU;;;;;;;;;;;YAIlB;0BAED,qKAAC;gBACC,QAAQ;gBACR,QAAQ;gBACR,aAAa;gBACb,YAAY;gBACZ,eAAe;gBACf,UAAU;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 1445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1451, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/pages/channel-mix.tsx"],"sourcesContent":["// src/pages/channel-mix.tsx\nimport React from 'react';\nimport ChannelSelectionStep from '../components/features/MarketingWalkthrough/components/ChannelSelectionStep';\nimport { ScreenTemplate } from '../components/shared/UIComponents';\n\nconst ChannelMixPage = () => (\n  <ScreenTemplate\n    title=\"Channel Mix\"\n    subtitle=\"Select and configure your marketing channels\"\n    aiInsights={[\n      \"Your target audience shows high engagement with content marketing and events\",\n      \"Digital advertising could complement your organic reach strategy\",\n      \"Consider expanding social presence based on industry benchmarks\"\n    ]}\n    isWalkthrough={false}\n  >\n    <ChannelSelectionStep />\n  </ScreenTemplate>\n);\n\nexport default ChannelMixPage;"],"names":[],"mappings":"AAAA,4BAA4B;;;;;AAE5B;AACA;;;;AAEA,MAAM,iBAAiB,kBACrB,qKAAC,oIAAA,CAAA,iBAAc;QACb,OAAM;QACN,UAAS;QACT,YAAY;YACV;YACA;YACA;SACD;QACD,eAAe;kBAEf,cAAA,qKAAC,8LAAA,CAAA,UAAoB;;;;;;;;;;uCAIV"}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}