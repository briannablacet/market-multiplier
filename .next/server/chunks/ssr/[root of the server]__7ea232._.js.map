{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/MarketingContext.tsx"],"sourcesContent":["// src/contexts/MarketingContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst MarketingProgramContext = createContext<{\n  programData: any;\n  updateData: (screen: string, newData: any) => void;\n  getAISuggestions: (screen: string) => string[];\n} | undefined>(undefined);\n\n\n\nexport const MarketingProgramProvider = ({ children }) => {\n  const [programData, setProgramData] = useState({\n    goals: {\n      targetRevenue: '',\n      timeframe: '',\n      pipelineTarget: ''\n    },\n    persona: {\n      role: '',\n      industry: '',\n      challenges: [],\n      buyingCriteria: []\n    },\n    competition: {\n      primaryCompetitor: '',\n      otherCompetitors: [],\n      winRates: {}\n    },\n    messaging: {\n      valueProposition: '',\n      differentiators: []\n    },\n    budget: {\n      totalBudget: '',\n      channelAllocation: {},\n      expectedROI: ''\n    },\n    pipeline: {\n      leadScoring: {\n        criteria: [],\n        weights: {}\n      },\n      projections: {\n        monthly: [],\n        quarterly: [],\n        conversion: {}\n      }\n    },\n    events: {\n      planned: [],\n      budget: {\n        allocated: 0,\n        spent: 0,\n        projected: 0\n      },\n      metrics: {\n        attendance: 0,\n        leads: 0,\n        opportunities: 0\n      }\n    }\n  });\n\n  const updateData = (screen, newData) => {\n    setProgramData(prev => ({\n      ...prev,\n      [screen]: { ...prev[screen], ...newData }\n    }));\n  };\n\n  const getAISuggestions = (screen) => {\n    switch(screen) {\n      case 'messaging':\n        return programData.competition.primaryCompetitor \n          ? [`Differentiate from ${programData.competition.primaryCompetitor} by focusing on...`]\n          : ['Add competitor information to get targeted suggestions'];\n      case 'budget':\n        return programData.goals.targetRevenue\n          ? [`Recommended budget based on ${programData.goals.targetRevenue} target...`]\n          : ['Set revenue goals to get budget recommendations'];\n      default:\n        return [];\n    }\n  };\n\n  return (\n    <MarketingProgramContext.Provider value={{\n      programData,\n      updateData,\n      getAISuggestions\n    }}>\n      {children}\n    </MarketingProgramContext.Provider>\n  );\n};\n\nexport const useMarketingProgram = () => useContext(MarketingProgramContext);\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;AACpC;;;AAEA,MAAM,wCAA0B,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAI7B;AAIR,MAAM,2BAA2B,CAAC,EAAE,QAAQ,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC7C,OAAO;YACL,eAAe;YACf,WAAW;YACX,gBAAgB;QAClB;QACA,SAAS;YACP,MAAM;YACN,UAAU;YACV,YAAY,EAAE;YACd,gBAAgB,EAAE;QACpB;QACA,aAAa;YACX,mBAAmB;YACnB,kBAAkB,EAAE;YACpB,UAAU,CAAC;QACb;QACA,WAAW;YACT,kBAAkB;YAClB,iBAAiB,EAAE;QACrB;QACA,QAAQ;YACN,aAAa;YACb,mBAAmB,CAAC;YACpB,aAAa;QACf;QACA,UAAU;YACR,aAAa;gBACX,UAAU,EAAE;gBACZ,SAAS,CAAC;YACZ;YACA,aAAa;gBACX,SAAS,EAAE;gBACX,WAAW,EAAE;gBACb,YAAY,CAAC;YACf;QACF;QACA,QAAQ;YACN,SAAS,EAAE;YACX,QAAQ;gBACN,WAAW;gBACX,OAAO;gBACP,WAAW;YACb;YACA,SAAS;gBACP,YAAY;gBACZ,OAAO;gBACP,eAAe;YACjB;QACF;IACF;IAEA,MAAM,aAAa,CAAC,QAAQ;QAC1B,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,OAAO,EAAE;oBAAE,GAAG,IAAI,CAAC,OAAO;oBAAE,GAAG,OAAO;gBAAC;YAC1C,CAAC;IACH;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO;YACL,KAAK;gBACH,OAAO,YAAY,WAAW,CAAC,iBAAiB,GAC5C;oBAAC,CAAC,mBAAmB,EAAE,YAAY,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;iBAAC,GACrF;oBAAC;iBAAyD;YAChE,KAAK;gBACH,OAAO,YAAY,KAAK,CAAC,aAAa,GAClC;oBAAC,CAAC,4BAA4B,EAAE,YAAY,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC;iBAAC,GAC5E;oBAAC;iBAAkD;YACzD;gBACE,OAAO,EAAE;QACb;IACF;IAEA,qBACE,qKAAC,wBAAwB,QAAQ;QAAC,OAAO;YACvC;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,MAAM,sBAAsB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/WalkthroughContext.tsx"],"sourcesContent":["// src/context/WalkthroughContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst WalkthroughContext = createContext({\n  data: {\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  },\n  updateStep: (step: string, data: any) => {}\n});\n\nexport const useWalkthrough = () => useContext(WalkthroughContext);\n\nexport const WalkthroughProvider = ({ children }) => {\n  const [data, setData] = useState({\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  });\n\n  const updateStep = (step: string, newData: any) => {\n    setData(prev => ({ ...prev, [step]: newData }));\n  };\n\n  return (\n    <WalkthroughContext.Provider value={{ data, updateStep }}>\n      {children}\n    </WalkthroughContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,qCAAqC;;;;;;AACrC;;;AAEA,MAAM,mCAAqB,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAAE;IACvC,MAAM;QACJ,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IACA,YAAY,CAAC,MAAc,QAAe;AAC5C;AAEO,MAAM,iBAAiB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;AAExC,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAAE;IAC9C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IAEA,MAAM,aAAa,CAAC,MAAc;QAChC,QAAQ,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAQ,CAAC;IAC/C;IAEA,qBACE,qKAAC,mBAAmB,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAW;kBACpD;;;;;;AAGP"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/SDRContext.tsx"],"sourcesContent":["// src/context/SDRContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\ninterface Lead {\n  id: string;\n  name: string;\n  company: string;\n  status: string;\n}\n\ninterface SDRContextType {\n  leadQueue: Lead[];\n  addToQueue: (lead: Lead) => void;\n  updateLeadStatus: (id: string, status: string) => void;\n}\n\nconst SDRContext = createContext<SDRContextType | undefined>(undefined);\n\nexport const useSDR = () => {\n  const context = useContext(SDRContext);\n  if (!context) throw new Error('useSDR must be used within SDRProvider');\n  return context;\n};\n\nexport const SDRProvider = ({ children }) => {\n  const [leadQueue, setLeadQueue] = useState<Lead[]>([]);\n\n  const addToQueue = (lead: Lead) => {\n    setLeadQueue([...leadQueue, lead]);\n  };\n\n  const updateLeadStatus = (id: string, status: string) => {\n    setLeadQueue(leads => \n      leads.map(lead => \n        lead.id === id ? {...lead, status} : lead\n      )\n    );\n  };\n\n  return (\n    <SDRContext.Provider value={{ leadQueue, addToQueue, updateLeadStatus }}>\n      {children}\n    </SDRContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAC7B;;;AAeA,MAAM,2BAAa,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA8B;AAEtD,MAAM,SAAS;IACpB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;AAEO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE;IACtC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAErD,MAAM,aAAa,CAAC;QAClB,aAAa;eAAI;YAAW;SAAK;IACnC;IAEA,MAAM,mBAAmB,CAAC,IAAY;QACpC,aAAa,CAAA,QACX,MAAM,GAAG,CAAC,CAAA,OACR,KAAK,EAAE,KAAK,KAAK;oBAAC,GAAG,IAAI;oBAAE;gBAAM,IAAI;IAG3C;IAEA,qBACE,qKAAC,WAAW,QAAQ;QAAC,OAAO;YAAE;YAAW;YAAY;QAAiB;kBACnE;;;;;;AAGP"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/shared/Navbar/index.tsx"],"sourcesContent":["// src/components/shared/Navbar/index.tsx\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst Navbar = () => {\n  const router = useRouter();\n  const navItems = [\n    { label: 'Dashboard', path: '/' },\n    { label: 'Lead Scoring', path: '/lead-scoring' },\n    { label: 'Content Strategy', path: '/content-strategy' },\n    { label: 'Channel Mix', path: '/channel-mix' },\n    { label: 'Timeline', path: '/timeline' }\n  ];\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                href={item.path}\n                className={`inline-flex items-center px-4 pt-1 border-b-2 text-sm font-medium ${\n                  router.pathname === item.path\n                    ? 'border-blue-500 text-gray-900'\n                    : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'\n                }`}\n              >\n                {item.label}\n              </Link>\n            ))}\n          </div>\n          <div className=\"flex items-center\">\n            <button\n              onClick={() => router.push('/walkthrough/1')}\n              className=\"ml-4 px-4 py-2 text-sm font-medium text-blue-600 border border-blue-600 rounded-full hover:bg-blue-50\"\n            >\n              Start Walkthrough\n            </button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;"],"names":[],"mappings":"AAAA,yCAAyC;;;;;AAEzC;AACA;;;;AAEA,MAAM,SAAS;IACb,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW;QACf;YAAE,OAAO;YAAa,MAAM;QAAI;QAChC;YAAE,OAAO;YAAgB,MAAM;QAAgB;QAC/C;YAAE,OAAO;YAAoB,MAAM;QAAoB;QACvD;YAAE,OAAO;YAAe,MAAM;QAAe;QAC7C;YAAE,OAAO;YAAY,MAAM;QAAY;KACxC;IAED,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,qKAAC,qHAAA,CAAA,UAAI;gCAEH,MAAM,KAAK,IAAI;gCACf,WAAW,CAAC,kEAAkE,EAC5E,OAAO,QAAQ,KAAK,KAAK,IAAI,GACzB,kCACA,8EACJ;0CAED,KAAK,KAAK;+BARN,KAAK,IAAI;;;;;;;;;;kCAYpB,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BACC,SAAS,IAAM,OAAO,IAAI,CAAC;4BAC3B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/pages/_app.js"],"sourcesContent":["// src/pages/_app.js\nimport { MarketingProgramProvider } from '../context/MarketingContext';\nimport { WalkthroughProvider } from '../context/WalkthroughContext';\nimport { SDRProvider } from '../context/SDRContext';\nimport '../styles/globals.css';\nimport Navbar from '../components/shared/Navbar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <MarketingProgramProvider>\n      <WalkthroughProvider>\n        <SDRProvider>\n          <Navbar />\n          <Component {...pageProps} />\n        </SDRProvider>\n      </WalkthroughProvider>\n    </MarketingProgramProvider>\n  );\n}\n\nexport default MyApp;"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AACA;AAEA;;;;;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,qKAAC,4HAAA,CAAA,2BAAwB;kBACvB,cAAA,qKAAC,8HAAA,CAAA,sBAAmB;sBAClB,cAAA,qKAAC,sHAAA,CAAA,cAAW;;kCACV,qKAAC,wIAAA,CAAA,UAAM;;;;;kCACP,qKAAC;wBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;;AAKlC;uCAEe"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/components/ui/card.tsx"],"sourcesContent":["// src/components/ui/card.tsx\nexport function Card({ children, className = '', ...props }) {\n    return (\n      <div className={`bg-white rounded-lg shadow ${className}`} {...props}>\n        {children}\n      </div>\n    );\n  }\n  \n  export function CardHeader({ children, className = '', ...props }) {\n    return <div className={`p-6 pb-0 ${className}`} {...props}>{children}</div>;\n  }\n  \n  export function CardTitle({ children, className = '', ...props }) {\n    return <h3 className={`text-lg font-medium ${className}`} {...props}>{children}</h3>;\n  }\n  \n  export function CardContent({ children, className = '', ...props }) {\n    return <div className={`p-6 ${className}`} {...props}>{children}</div>;\n  }"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;;;AACtB,SAAS,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IACvD,qBACE,qKAAC;QAAI,WAAW,CAAC,2BAA2B,EAAE,WAAW;QAAG,GAAG,KAAK;kBACjE;;;;;;AAGP;AAEO,SAAS,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC/D,qBAAO,qKAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AAC9D;AAEO,SAAS,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC9D,qBAAO,qKAAC;QAAG,WAAW,CAAC,oBAAoB,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACxE;AAEO,SAAS,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAChE,qBAAO,qKAAC;QAAI,WAAW,CAAC,IAAI,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACzD"}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/shared/UIComponents.js"],"sourcesContent":["// src/components/shared/UIComponents.js\nimport React from 'react';\n\nexport function ProgressBar({ currentStep, totalSteps }) {\n  return (\n    <div className=\"w-full h-2 bg-slate-200 rounded\">\n      <div\n        className=\"h-full bg-blue-600 rounded\"\n        style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n      />\n    </div>\n  );\n}\n\nexport function AIInsight({ insights }) {\n  if (!insights?.length) return null;\n  \n  return (\n    <div className=\"mt-6 p-4 bg-slate-50 rounded-lg border border-slate-200\">\n      <p className=\"text-sm text-slate-600\">\n        ✨ {insights[0]}\n      </p>\n    </div>\n  );\n}\n\nexport function NavigationButtons({ onBack, onNext, currentStep, totalSteps, isWalkthrough, nextText }) {\n  return (\n    <div className=\"flex justify-between items-center w-full mt-8\">\n      {onBack && (\n        <button\n          onClick={onBack}\n          className=\"px-6 py-2 rounded-full border border-blue-600 text-blue-600\"\n        >\n          ← Back\n        </button>\n      )}\n      {!onBack && <div />}\n\n      {isWalkthrough && currentStep && totalSteps && (\n        <span className=\"text-slate-500\">Step {currentStep} of {totalSteps}</span>\n      )}\n\n      {onNext && (\n        <button\n          onClick={onNext}\n          className=\"px-6 py-2 rounded-full bg-blue-600 text-white\"\n        >\n          {nextText || 'Next →'}\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport function MetricsCard({ title, metrics }) {\n  return (\n    <div className=\"p-6 bg-white rounded-lg border border-slate-200\">\n      <h3 className=\"text-lg font-semibold text-slate-900 mb-4\">{title}</h3>\n      <div className=\"grid grid-cols-2 gap-4\">\n        {Object.entries(metrics).map(([label, value]) => (\n          <div key={label}>\n            <p className=\"text-sm text-slate-600\">{label}</p>\n            <p className=\"text-2xl font-bold text-slate-900\">{value}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const ScreenTemplate = ({\n  title,\n  subtitle,\n  currentStep,\n  totalSteps,\n  aiInsights,\n  onNext,\n  onBack,\n  isWalkthrough = false,\n  nextText,\n  children\n}) => {\n  return (\n    <div className=\"max-w-4xl mx-auto p-8\">\n      {isWalkthrough && currentStep && totalSteps && (\n        <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      )}\n\n      <div className=\"mt-16\">\n        <h1 className=\"text-2xl font-bold text-slate-900\">{title}</h1>\n        {subtitle && <p className=\"mt-2 text-slate-600\">{subtitle}</p>}\n      </div>\n\n      \n{aiInsights && aiInsights.length > 0 && (\n  <div className=\"mt-8 mb-8\"> \n    <AIInsight insights={aiInsights} />\n  </div>\n)}\n\n      {children}\n\n      <NavigationButtons\n        onBack={onBack}\n        onNext={onNext}\n        currentStep={currentStep}\n        totalSteps={totalSteps}\n        isWalkthrough={isWalkthrough}\n        nextText={nextText}\n      />\n    </div>\n  );\n};"],"names":[],"mappings":"AAAA,wCAAwC;;;;;;;;;AACxC;;;AAEO,SAAS,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE;IACrD,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YACC,WAAU;YACV,OAAO;gBAAE,OAAO,GAAG,AAAC,cAAc,aAAc,IAAI,CAAC,CAAC;YAAC;;;;;;;;;;;AAI/D;AAEO,SAAS,UAAU,EAAE,QAAQ,EAAE;IACpC,IAAI,CAAC,UAAU,QAAQ,OAAO;IAE9B,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAE,WAAU;;gBAAyB;gBACjC,QAAQ,CAAC,EAAE;;;;;;;;;;;;AAItB;AAEO,SAAS,kBAAkB,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,QAAQ,EAAE;IACpG,qBACE,qKAAC;QAAI,WAAU;;YACZ,wBACC,qKAAC;gBACC,SAAS;gBACT,WAAU;0BACX;;;;;;YAIF,CAAC,wBAAU,qKAAC;;;;;YAEZ,iBAAiB,eAAe,4BAC/B,qKAAC;gBAAK,WAAU;;oBAAiB;oBAAM;oBAAY;oBAAK;;;;;;;YAGzD,wBACC,qKAAC;gBACC,SAAS;gBACT,WAAU;0BAET,YAAY;;;;;;;;;;;;AAKvB;AAEO,SAAS,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE;IAC5C,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA6C;;;;;;0BAC3D,qKAAC;gBAAI,WAAU;0BACZ,OAAO,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,MAAM,iBAC1C,qKAAC;;0CACC,qKAAC;gCAAE,WAAU;0CAA0B;;;;;;0CACvC,qKAAC;gCAAE,WAAU;0CAAqC;;;;;;;uBAF1C;;;;;;;;;;;;;;;;AAQpB;AAEO,MAAM,iBAAiB,CAAC,EAC7B,KAAK,EACL,QAAQ,EACR,WAAW,EACX,UAAU,EACV,UAAU,EACV,MAAM,EACN,MAAM,EACN,gBAAgB,KAAK,EACrB,QAAQ,EACR,QAAQ,EACT;IACC,qBACE,qKAAC;QAAI,WAAU;;YACZ,iBAAiB,eAAe,4BAC/B,qKAAC;gBAAY,aAAa;gBAAa,YAAY;;;;;;0BAGrD,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;kCAAqC;;;;;;oBAClD,0BAAY,qKAAC;wBAAE,WAAU;kCAAuB;;;;;;;;;;;;YAIxD,cAAc,WAAW,MAAM,GAAG,mBACjC,qKAAC;gBAAI,WAAU;0BACb,cAAA,qKAAC;oBAAU,UAAU;;;;;;;;;;;YAIlB;0BAED,qKAAC;gBACC,QAAQ;gBACR,QAAQ;gBACR,aAAa;gBACb,YAAY;gBACZ,eAAe;gBACf,UAAU;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 746, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/features/BudgetModule/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { ScreenTemplate } from '../../shared/UIComponents';\n\n// Smart defaults for B2B tech companies\nconst CHANNEL_BENCHMARKS = {\n  B2B_TECH: {\n    'Content Marketing': {\n      allocation: 0.25,\n      subChannels: {\n        'Blog Content': 0.30,\n        'White Papers': 0.25,\n        'Case Studies': 0.25,\n        'Video Content': 0.20\n      }\n    },\n    'Paid Search': {\n      allocation: 0.15,\n      subChannels: {\n        'Google Ads': 0.70,\n        'Bing Ads': 0.20,\n        'Retargeting': 0.10\n      }\n    },\n    'Events': {\n      allocation: 0.25,\n      subChannels: {\n        'Trade Shows': {\n          allocation: 0.50,\n          details: {\n            costRanges: {\n              'Booth Space': '5000-15000',\n              'Setup & Materials': '2000-5000',\n              'Staff Travel': '3000-8000'\n            },\n            leadProjections: {\n              'Booth Visitors': '200-500',\n              'Qualified Leads': '50-100'\n            }\n          }\n        },\n        'Webinars': {\n          allocation: 0.30,\n          details: {\n            costRanges: {\n              'Platform': '500-1000',\n              'Promotion': '1000-3000',\n              'Content Development': '2000-4000'\n            },\n            leadProjections: {\n              'Registrants': '150-300',\n              'Attendees': '75-150'\n            }\n          }\n        },\n        'Partner Events': {\n          allocation: 0.20,\n          details: {\n            costRanges: {\n              'Sponsorship': '3000-10000',\n              'Materials': '1000-3000'\n            },\n            leadProjections: {\n              'Attendees': '100-200',\n              'Qualified Leads': '20-40'\n            }\n          }\n        }\n      }\n    },\n    'Social Media': {\n      allocation: 0.15,\n      subChannels: {\n        'LinkedIn Ads': 0.50,\n        'Twitter Ads': 0.20,\n        'Content Promotion': 0.30\n      }\n    },\n    'Email Marketing': {\n      allocation: 0.10,\n      subChannels: {\n        'Newsletter': 0.30,\n        'Nurture Campaigns': 0.40,\n        'Account-Based': 0.30\n      }\n    },\n    'Partner Marketing': {\n      allocation: 0.10,\n      subChannels: {\n        'Co-marketing': 0.40,\n        'Partner Enablement': 0.30,\n        'Joint Campaigns': 0.30\n      }\n    }\n  }\n};\n\nconst BudgetModule = () => {\n  const [budget, setBudget] = useState({\n    totalBudget: '50000',\n    channelAllocation: {},\n    events: {\n      'Trade Shows': [],\n      'Webinars': [],\n      'Partner Events': []\n    },\n    expectedROI: '2.4'\n  });\n  const [activeChannel, setActiveChannel] = useState(null);\n  const [showEventPlanner, setShowEventPlanner] = useState(false);\n\n  // Helper Components with full implementations\n  const ChannelAllocation = ({ value, onChange, benchmarks }) => (\n    <div className=\"space-y-4\">\n      {Object.entries(benchmarks).map(([channel, data]) => (\n        <div key={channel} className=\"space-y-2\">\n          <div className=\"flex items-center space-x-4\">\n            <label className=\"w-32 text-sm font-medium text-slate-900\">{channel}</label>\n            <input\n              type=\"range\"\n              min=\"0\"\n              max=\"100\"\n              value={value[channel]?.allocation || data.allocation * 100}\n              onChange={(e) => onChange(channel, parseInt(e.target.value))}\n              className=\"flex-grow\"\n            />\n            <span className=\"w-16 text-sm text-slate-600\">\n              {value[channel]?.allocation || Math.round(data.allocation * 100)}%\n            </span>\n            {data.subChannels && (\n              <button\n                onClick={() => setActiveChannel(channel)}\n                className=\"px-2 py-1 text-sm text-blue-600 hover:bg-blue-50 rounded\"\n              >\n                Details →\n              </button>\n            )}\n          </div>\n          {activeChannel === channel && data.subChannels && (\n            <div className=\"ml-8 p-4 bg-slate-50 rounded\">\n              <h4 className=\"text-sm font-medium mb-2\">{channel} Breakdown</h4>\n              {Object.entries(data.subChannels).map(([subChannel, subData]) => (\n                <div key={subChannel} className=\"flex items-center space-x-4 mb-2\">\n                  <label className=\"w-32 text-sm text-slate-600\">{subChannel}</label>\n                  <input\n                    type=\"range\"\n                    min=\"0\"\n                    max=\"100\"\n                    value={value[channel]?.subChannels?.[subChannel] || subData.allocation * 100}\n                    onChange={(e) => onChange(`${channel}.${subChannel}`, parseInt(e.target.value))}\n                    className=\"flex-grow\"\n                  />\n                  <span className=\"w-16 text-sm text-slate-600\">\n                    {value[channel]?.subChannels?.[subChannel] || Math.round(subData.allocation * 100)}%\n                  </span>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n\n  const EventPlanner = ({ events, onUpdate }) => {\n    const addEvent = (type) => {\n      const typeData = CHANNEL_BENCHMARKS.B2B_TECH.Events.subChannels[type];\n      onUpdate({\n        ...events,\n        [type]: [...events[type], {\n          name: `${type} ${events[type].length + 1}`,\n          budget: 0,\n          projectedLeads: typeData.details.leadProjections['Qualified Leads'].split('-')[0],\n          quarter: Math.floor(events[type].length / 3) + 1,\n          details: {}\n        }]\n      });\n    };\n\n    return (\n      <div className=\"mt-6 p-6 bg-white rounded-lg border border-slate-200\">\n        <h3 className=\"text-lg font-semibold mb-4\">Event Planning</h3>\n        <div className=\"grid grid-cols-3 gap-4\">\n          {Object.entries(events).map(([type, typeEvents]) => (\n            <div key={type} className=\"space-y-4\">\n              <h4 className=\"font-medium\">{type}</h4>\n              {typeEvents.map((event, index) => (\n                <div key={index} className=\"p-4 border rounded\">\n                  <input\n                    type=\"text\"\n                    value={event.name}\n                    onChange={(e) => {\n                      const newEvents = {...events};\n                      newEvents[type][index].name = e.target.value;\n                      onUpdate(newEvents);\n                    }}\n                    className=\"w-full p-2 mb-2 border rounded\"\n                  />\n                  <div className=\"space-y-2\">\n                    <div>\n                      <label className=\"text-sm text-slate-600\">Budget</label>\n                      <input\n                        type=\"number\"\n                        value={event.budget}\n                        onChange={(e) => {\n                          const newEvents = {...events};\n                          newEvents[type][index].budget = Number(e.target.value);\n                          onUpdate(newEvents);\n                        }}\n                        className=\"w-full p-2 border rounded\"\n                      />\n                    </div>\n                    <div>\n                      <label className=\"text-sm text-slate-600\">Quarter</label>\n                      <select\n                        value={event.quarter}\n                        onChange={(e) => {\n                          const newEvents = {...events};\n                          newEvents[type][index].quarter = Number(e.target.value);\n                          onUpdate(newEvents);\n                        }}\n                        className=\"w-full p-2 border rounded\"\n                      >\n                        {[1,2,3,4].map(q => (\n                          <option key={q} value={q}>Q{q}</option>\n                        ))}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              <button\n                onClick={() => addEvent(type)}\n                className=\"w-full p-2 text-blue-600 border border-blue-600 rounded hover:bg-blue-50\"\n              >\n                + Add {type}\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  const BudgetProjections = ({ totalBudget, allocation, events }) => {\n    const calculateTotalEventBudget = () => {\n      return Object.values(events).reduce((total, typeEvents) =>\n        total + typeEvents.reduce((sum, event) => sum + event.budget, 0), 0\n      );\n    };\n\n    const eventBudget = calculateTotalEventBudget();\n    const remainingBudget = totalBudget - eventBudget;\n\n    const chartData = Object.entries(allocation).map(([channel, value]) => ({\n      name: channel,\n      budget: (remainingBudget * (value.allocation / 100)).toFixed(2)\n    }));\n\n    return (\n      <div className=\"mt-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Budget Projections</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n              <div>\n                <p className=\"text-sm text-slate-600\">Total Budget</p>\n                <p className=\"text-2xl font-bold text-slate-900\">${parseInt(totalBudget).toLocaleString()}</p>\n              </div>\n              <div>\n                <p className=\"text-sm text-slate-600\">Event Budget</p>\n                <p className=\"text-2xl font-bold text-blue-600\">${eventBudget.toLocaleString()}</p>\n                <p className=\"text-sm text-slate-600\">\n                  ({Math.round(eventBudget / totalBudget * 100)}%)\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-slate-600\">Channel Budget</p>\n                <p className=\"text-2xl font-bold text-blue-600\">${remainingBudget.toLocaleString()}</p>\n                <p className=\"text-sm text-slate-600\">\n                  ({Math.round(remainingBudget / totalBudget * 100)}%)\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-slate-600\">Projected ROI</p>\n                <p className=\"text-2xl font-bold text-green-600\">2.4x</p>\n              </div>\n            </div>\n            <div className=\"h-64\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <LineChart data={chartData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Line type=\"monotone\" dataKey=\"budget\" stroke=\"#2563eb\" />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  };\n\n  return (\n    <ScreenTemplate\n      title=\"Budget Planning\"\n      subtitle=\"Plan and allocate your marketing budget across channels\"\n      aiInsights={[\n        \"Based on your industry benchmarks, we recommend allocating 25-30% to content marketing\",\n        \"Companies in your sector typically see best ROI from event marketing\"\n      ]}\n      isWalkthrough={false}\n    >\n      <div className=\"max-w-4xl mx-auto space-y-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Total Budget</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center space-x-4\">\n              <span className=\"text-slate-600\">$</span>\n              <input\n                type=\"number\"\n                value={budget.totalBudget}\n                onChange={(e) => setBudget(prev => ({\n                  ...prev,\n                  totalBudget: e.target.value\n                }))}\n                className=\"w-48 p-2 border rounded\"\n              />\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Channel Allocation</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold text-slate-900\">Channel Distribution</h3>\n              <button\n                onClick={() => setShowEventPlanner(!showEventPlanner)}\n                className=\"text-blue-600 hover:text-blue-700\"\n              >\n                {showEventPlanner ? 'Hide Event Planner' : 'Plan Events →'}\n              </button>\n            </div>\n\n            <ChannelAllocation\n              value={budget.channelAllocation}\n              onChange={(channel, value) => {\n                setBudget(prev => ({\n                  ...prev,\n                  channelAllocation: {\n                    ...prev.channelAllocation,\n                    [channel]: { allocation: value }\n                  }\n                }));\n              }}\n              benchmarks={CHANNEL_BENCHMARKS.B2B_TECH}\n            />\n          </CardContent>\n        </Card>\n\n        {showEventPlanner && (\n          <EventPlanner\n            events={budget.events}\n            onUpdate={(newEvents) => setBudget(prev => ({\n              ...prev,\n              events: newEvents\n            }))}\n          />\n        )}\n\n        <BudgetProjections\n          totalBudget={Number(budget.totalBudget)}\n          allocation={budget.channelAllocation}\n          events={budget.events}\n        />\n      </div>\n    </ScreenTemplate>\n  );\n};\n\nexport default BudgetModule;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1603, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1609, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/pages/budget.js"],"sourcesContent":["// src/pages/budget.js\nimport BudgetModule from '../components/features/BudgetModule';\n\nexport default function BudgetPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <BudgetModule />\n    </div>\n  );\n}"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;;AAEe,SAAS;IACtB,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC,gJAAA,CAAA,UAAY;;;;;;;;;;AAGnB"}},
    {"offset": {"line": 1631, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}