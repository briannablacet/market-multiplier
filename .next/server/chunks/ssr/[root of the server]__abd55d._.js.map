{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/MarketingContext.tsx"],"sourcesContent":["// src/contexts/MarketingContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst MarketingProgramContext = createContext<{\n  programData: any;\n  updateData: (screen: string, newData: any) => void;\n  getAISuggestions: (screen: string) => string[];\n} | undefined>(undefined);\n\n\n\nexport const MarketingProgramProvider = ({ children }) => {\n  const [programData, setProgramData] = useState({\n    goals: {\n      targetRevenue: '',\n      timeframe: '',\n      pipelineTarget: ''\n    },\n    persona: {\n      role: '',\n      industry: '',\n      challenges: [],\n      buyingCriteria: []\n    },\n    competition: {\n      primaryCompetitor: '',\n      otherCompetitors: [],\n      winRates: {}\n    },\n    messaging: {\n      valueProposition: '',\n      differentiators: []\n    },\n    budget: {\n      totalBudget: '',\n      channelAllocation: {},\n      expectedROI: ''\n    },\n    pipeline: {\n      leadScoring: {\n        criteria: [],\n        weights: {}\n      },\n      projections: {\n        monthly: [],\n        quarterly: [],\n        conversion: {}\n      }\n    },\n    events: {\n      planned: [],\n      budget: {\n        allocated: 0,\n        spent: 0,\n        projected: 0\n      },\n      metrics: {\n        attendance: 0,\n        leads: 0,\n        opportunities: 0\n      }\n    }\n  });\n\n  const updateData = (screen, newData) => {\n    setProgramData(prev => ({\n      ...prev,\n      [screen]: { ...prev[screen], ...newData }\n    }));\n  };\n\n  const getAISuggestions = (screen) => {\n    switch(screen) {\n      case 'messaging':\n        return programData.competition.primaryCompetitor \n          ? [`Differentiate from ${programData.competition.primaryCompetitor} by focusing on...`]\n          : ['Add competitor information to get targeted suggestions'];\n      case 'budget':\n        return programData.goals.targetRevenue\n          ? [`Recommended budget based on ${programData.goals.targetRevenue} target...`]\n          : ['Set revenue goals to get budget recommendations'];\n      default:\n        return [];\n    }\n  };\n\n  return (\n    <MarketingProgramContext.Provider value={{\n      programData,\n      updateData,\n      getAISuggestions\n    }}>\n      {children}\n    </MarketingProgramContext.Provider>\n  );\n};\n\nexport const useMarketingProgram = () => useContext(MarketingProgramContext);\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;;;AACpC;;;AAEA,MAAM,wCAA0B,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAI7B;AAIR,MAAM,2BAA2B,CAAC,EAAE,QAAQ,EAAE;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC7C,OAAO;YACL,eAAe;YACf,WAAW;YACX,gBAAgB;QAClB;QACA,SAAS;YACP,MAAM;YACN,UAAU;YACV,YAAY,EAAE;YACd,gBAAgB,EAAE;QACpB;QACA,aAAa;YACX,mBAAmB;YACnB,kBAAkB,EAAE;YACpB,UAAU,CAAC;QACb;QACA,WAAW;YACT,kBAAkB;YAClB,iBAAiB,EAAE;QACrB;QACA,QAAQ;YACN,aAAa;YACb,mBAAmB,CAAC;YACpB,aAAa;QACf;QACA,UAAU;YACR,aAAa;gBACX,UAAU,EAAE;gBACZ,SAAS,CAAC;YACZ;YACA,aAAa;gBACX,SAAS,EAAE;gBACX,WAAW,EAAE;gBACb,YAAY,CAAC;YACf;QACF;QACA,QAAQ;YACN,SAAS,EAAE;YACX,QAAQ;gBACN,WAAW;gBACX,OAAO;gBACP,WAAW;YACb;YACA,SAAS;gBACP,YAAY;gBACZ,OAAO;gBACP,eAAe;YACjB;QACF;IACF;IAEA,MAAM,aAAa,CAAC,QAAQ;QAC1B,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,OAAO,EAAE;oBAAE,GAAG,IAAI,CAAC,OAAO;oBAAE,GAAG,OAAO;gBAAC;YAC1C,CAAC;IACH;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAO;YACL,KAAK;gBACH,OAAO,YAAY,WAAW,CAAC,iBAAiB,GAC5C;oBAAC,CAAC,mBAAmB,EAAE,YAAY,WAAW,CAAC,iBAAiB,CAAC,kBAAkB,CAAC;iBAAC,GACrF;oBAAC;iBAAyD;YAChE,KAAK;gBACH,OAAO,YAAY,KAAK,CAAC,aAAa,GAClC;oBAAC,CAAC,4BAA4B,EAAE,YAAY,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC;iBAAC,GAC5E;oBAAC;iBAAkD;YACzD;gBACE,OAAO,EAAE;QACb;IACF;IAEA,qBACE,qKAAC,wBAAwB,QAAQ;QAAC,OAAO;YACvC;YACA;YACA;QACF;kBACG;;;;;;AAGP;AAEO,MAAM,sBAAsB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/WalkthroughContext.tsx"],"sourcesContent":["// src/context/WalkthroughContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\nconst WalkthroughContext = createContext({\n  data: {\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  },\n  updateStep: (step: string, data: any) => {}\n});\n\nexport const useWalkthrough = () => useContext(WalkthroughContext);\n\nexport const WalkthroughProvider = ({ children }) => {\n  const [data, setData] = useState({\n    goals: {},\n    persona: {},\n    channels: { selected: [] },\n    budget: { allocations: [] },\n    content: { types: [] }\n  });\n\n  const updateStep = (step: string, newData: any) => {\n    setData(prev => ({ ...prev, [step]: newData }));\n  };\n\n  return (\n    <WalkthroughContext.Provider value={{ data, updateStep }}>\n      {children}\n    </WalkthroughContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,qCAAqC;;;;;;AACrC;;;AAEA,MAAM,mCAAqB,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAAE;IACvC,MAAM;QACJ,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IACA,YAAY,CAAC,MAAc,QAAe;AAC5C;AAEO,MAAM,iBAAiB,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;AAExC,MAAM,sBAAsB,CAAC,EAAE,QAAQ,EAAE;IAC9C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;QAC/B,OAAO,CAAC;QACR,SAAS,CAAC;QACV,UAAU;YAAE,UAAU,EAAE;QAAC;QACzB,QAAQ;YAAE,aAAa,EAAE;QAAC;QAC1B,SAAS;YAAE,OAAO,EAAE;QAAC;IACvB;IAEA,MAAM,aAAa,CAAC,MAAc;QAChC,QAAQ,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAQ,CAAC;IAC/C;IAEA,qBACE,qKAAC,mBAAmB,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAW;kBACpD;;;;;;AAGP"}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/SDRContext.tsx"],"sourcesContent":["// src/context/SDRContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\n\ninterface Lead {\n  id: string;\n  name: string;\n  company: string;\n  status: string;\n}\n\ninterface SDRContextType {\n  leadQueue: Lead[];\n  addToQueue: (lead: Lead) => void;\n  updateLeadStatus: (id: string, status: string) => void;\n}\n\nconst SDRContext = createContext<SDRContextType | undefined>(undefined);\n\nexport const useSDR = () => {\n  const context = useContext(SDRContext);\n  if (!context) throw new Error('useSDR must be used within SDRProvider');\n  return context;\n};\n\nexport const SDRProvider = ({ children }) => {\n  const [leadQueue, setLeadQueue] = useState<Lead[]>([]);\n\n  const addToQueue = (lead: Lead) => {\n    setLeadQueue([...leadQueue, lead]);\n  };\n\n  const updateLeadStatus = (id: string, status: string) => {\n    setLeadQueue(leads => \n      leads.map(lead => \n        lead.id === id ? {...lead, status} : lead\n      )\n    );\n  };\n\n  return (\n    <SDRContext.Provider value={{ leadQueue, addToQueue, updateLeadStatus }}>\n      {children}\n    </SDRContext.Provider>\n  );\n};"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;AAC7B;;;AAeA,MAAM,2BAAa,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAA8B;AAEtD,MAAM,SAAS;IACpB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAC9B,OAAO;AACT;AAEO,MAAM,cAAc,CAAC,EAAE,QAAQ,EAAE;IACtC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAErD,MAAM,aAAa,CAAC;QAClB,aAAa;eAAI;YAAW;SAAK;IACnC;IAEA,MAAM,mBAAmB,CAAC,IAAY;QACpC,aAAa,CAAA,QACX,MAAM,GAAG,CAAC,CAAA,OACR,KAAK,EAAE,KAAK,KAAK;oBAAC,GAAG,IAAI;oBAAE;gBAAM,IAAI;IAG3C;IAEA,qBACE,qKAAC,WAAW,QAAQ;QAAC,OAAO;YAAE;YAAW;YAAY;QAAiB;kBACnE;;;;;;AAGP"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/shared/Navbar/index.tsx"],"sourcesContent":["// src/components/shared/Navbar/index.tsx\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst Navbar = () => {\n  const router = useRouter();\n  const navItems = [\n    { label: 'Dashboard', path: '/' },\n    { label: 'Lead Scoring', path: '/lead-scoring' },\n    { label: 'Content Strategy', path: '/content-strategy' },\n    { label: 'Channel Mix', path: '/channel-mix' },\n    { label: 'Timeline', path: '/timeline' }\n  ];\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4\">\n        <div className=\"flex justify-between h-16\">\n          <div className=\"flex\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                href={item.path}\n                className={`inline-flex items-center px-4 pt-1 border-b-2 text-sm font-medium ${\n                  router.pathname === item.path\n                    ? 'border-blue-500 text-gray-900'\n                    : 'border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700'\n                }`}\n              >\n                {item.label}\n              </Link>\n            ))}\n          </div>\n          <div className=\"flex items-center\">\n            <button\n              onClick={() => router.push('/walkthrough/1')}\n              className=\"ml-4 px-4 py-2 text-sm font-medium text-blue-600 border border-blue-600 rounded-full hover:bg-blue-50\"\n            >\n              Start Walkthrough\n            </button>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;"],"names":[],"mappings":"AAAA,yCAAyC;;;;;AAEzC;AACA;;;;AAEA,MAAM,SAAS;IACb,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW;QACf;YAAE,OAAO;YAAa,MAAM;QAAI;QAChC;YAAE,OAAO;YAAgB,MAAM;QAAgB;QAC/C;YAAE,OAAO;YAAoB,MAAM;QAAoB;QACvD;YAAE,OAAO;YAAe,MAAM;QAAe;QAC7C;YAAE,OAAO;YAAY,MAAM;QAAY;KACxC;IAED,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;sBACb,cAAA,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAI,WAAU;kCACZ,SAAS,GAAG,CAAC,CAAC,qBACb,qKAAC,qHAAA,CAAA,UAAI;gCAEH,MAAM,KAAK,IAAI;gCACf,WAAW,CAAC,kEAAkE,EAC5E,OAAO,QAAQ,KAAK,KAAK,IAAI,GACzB,kCACA,8EACJ;0CAED,KAAK,KAAK;+BARN,KAAK,IAAI;;;;;;;;;;kCAYpB,qKAAC;wBAAI,WAAU;kCACb,cAAA,qKAAC;4BACC,SAAS,IAAM,OAAO,IAAI,CAAC;4BAC3B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;uCAEe"}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/pages/_app.js"],"sourcesContent":["// src/pages/_app.js\nimport { MarketingProgramProvider } from '../context/MarketingContext';\nimport { WalkthroughProvider } from '../context/WalkthroughContext';\nimport { SDRProvider } from '../context/SDRContext';\nimport '../styles/globals.css';\nimport Navbar from '../components/shared/Navbar';\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <MarketingProgramProvider>\n      <WalkthroughProvider>\n        <SDRProvider>\n          <Navbar />\n          <Component {...pageProps} />\n        </SDRProvider>\n      </WalkthroughProvider>\n    </MarketingProgramProvider>\n  );\n}\n\nexport default MyApp;"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AACA;AAEA;;;;;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,qBACE,qKAAC,4HAAA,CAAA,2BAAwB;kBACvB,cAAA,qKAAC,8HAAA,CAAA,sBAAmB;sBAClB,cAAA,qKAAC,sHAAA,CAAA,cAAW;;kCACV,qKAAC,wIAAA,CAAA,UAAM;;;;;kCACP,qKAAC;wBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;;;;;;AAKlC;uCAEe"}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 461, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/context/ContentContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ContentContext = createContext(null);\n\nexport const ContentProvider = ({ children }) => {\n  const [selectedContentTypes, setSelectedContentTypes] = useState([]);\n\n  useEffect(() => {\n    const saved = localStorage.getItem('selectedContentTypes');\n    if (saved) setSelectedContentTypes(JSON.parse(saved));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('selectedContentTypes', JSON.stringify(selectedContentTypes));\n  }, [selectedContentTypes]);\n\n  useEffect(() => {\n    console.log('ContentStrategyStep useEffect:', selectedContentTypes);\n  }, [selectedContentTypes]);\n\n  return (\n    <ContentContext.Provider value={{ selectedContentTypes, setSelectedContentTypes }}>\n      {children}\n    </ContentContext.Provider>\n  );\n};\n\nexport const useContent = () => {\n  const context = useContext(ContentContext);\n  console.log('useContent:', context.selectedContentTypes);\n  return context;\n};"],"names":[],"mappings":";;;;;AAAA;;;AAEA,MAAM,+BAAiB,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD,EAAE;AAE9B,MAAM,kBAAkB,CAAC,EAAE,QAAQ,EAAE;IAC1C,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAEnE,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,aAAa,OAAO,CAAC;QACnC,IAAI,OAAO,wBAAwB,KAAK,KAAK,CAAC;IAChD,GAAG,EAAE;IAEL,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,wBAAwB,KAAK,SAAS,CAAC;IAC9D,GAAG;QAAC;KAAqB;IAEzB,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,QAAQ,GAAG,CAAC,kCAAkC;IAChD,GAAG;QAAC;KAAqB;IAEzB,qBACE,qKAAC,eAAe,QAAQ;QAAC,OAAO;YAAE;YAAsB;QAAwB;kBAC7E;;;;;;AAGP;AAEO,MAAM,aAAa;IACxB,MAAM,UAAU,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,QAAQ,GAAG,CAAC,eAAe,QAAQ,oBAAoB;IACvD,OAAO;AACT"}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/components/ui/card.tsx"],"sourcesContent":["// src/components/ui/card.tsx\nexport function Card({ children, className = '', ...props }) {\n    return (\n      <div className={`bg-white rounded-lg shadow ${className}`} {...props}>\n        {children}\n      </div>\n    );\n  }\n  \n  export function CardHeader({ children, className = '', ...props }) {\n    return <div className={`p-6 pb-0 ${className}`} {...props}>{children}</div>;\n  }\n  \n  export function CardTitle({ children, className = '', ...props }) {\n    return <h3 className={`text-lg font-medium ${className}`} {...props}>{children}</h3>;\n  }\n  \n  export function CardContent({ children, className = '', ...props }) {\n    return <div className={`p-6 ${className}`} {...props}>{children}</div>;\n  }"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;;;AACtB,SAAS,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IACvD,qBACE,qKAAC;QAAI,WAAW,CAAC,2BAA2B,EAAE,WAAW;QAAG,GAAG,KAAK;kBACjE;;;;;;AAGP;AAEO,SAAS,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC/D,qBAAO,qKAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AAC9D;AAEO,SAAS,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC9D,qBAAO,qKAAC;QAAG,WAAW,CAAC,oBAAoB,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACxE;AAEO,SAAS,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAChE,qBAAO,qKAAC;QAAI,WAAW,CAAC,IAAI,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACzD"}},
    {"offset": {"line": 562, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/features/ContentEnhancer/contentGuidelines.tsx"],"sourcesContent":["// src/components/features/ContentEnhancer/contentGuidelines.ts\n\nimport React from 'react';\n\nexport const CONTENT_GUIDELINES = {\n    structure: {\n      narrative: {\n        required: true,\n        principles: [\n          'Maintain clear story flow',\n          'Use natural transitions between ideas',\n          'Build logical progression',\n          'Connect paragraphs smoothly'\n        ]\n      },\n      lists: {\n        appropriate: [\n          'Feature comparisons',\n          'Technical specifications',\n          'Quick reference items',\n          'Step-by-step instructions'\n        ],\n        inappropriate: [\n          'Main content body',\n          'Conceptual explanations',\n          'Topic introductions',\n          'Complex ideas requiring context'\n        ],\n        maxListsPerSection: 2\n      }\n    },\n    transitions: [\n      'Building on this foundation',\n      'This leads us to',\n      'Understanding this concept',\n      'Taking this further',\n      'This reveals why',\n      'Here\\'s how this works'\n    ]\n  };\n  \n  export const validateContent = (content: string) => {\n    const listCount = (content.match(/^[-*•]\\s/gm) || []).length;\n    const sections = content.split(/#{1,3}\\s/);\n    \n    return {\n      hasNarrativeFlow: sections.every(s => s.length > 100),\n      listPercentage: listCount / content.length,\n      needsRevision: listCount / content.length > 0.3\n    };\n  };\n  \n  export const enhanceContent = (content: string) => {\n    // Content enhancement logic\n    const enhanced = content\n      .replace(/^[-*•]\\s(.+)$/gm, (match, p1) => {\n        // Convert inappropriate lists to narrative paragraphs\n        return `${p1} fits into the broader picture by...`;\n      })\n      .replace(/\\n\\n[-*•]/g, '\\n\\nFurthermore, ');\n  \n    return enhanced;\n  };"],"names":[],"mappings":"AAAA,+DAA+D;;;;;;AAIxD,MAAM,qBAAqB;IAC9B,WAAW;QACT,WAAW;YACT,UAAU;YACV,YAAY;gBACV;gBACA;gBACA;gBACA;aACD;QACH;QACA,OAAO;YACL,aAAa;gBACX;gBACA;gBACA;gBACA;aACD;YACD,eAAe;gBACb;gBACA;gBACA;gBACA;aACD;YACD,oBAAoB;QACtB;IACF;IACA,aAAa;QACX;QACA;QACA;QACA;QACA;QACA;KACD;AACH;AAEO,MAAM,kBAAkB,CAAC;IAC9B,MAAM,YAAY,CAAC,QAAQ,KAAK,CAAC,iBAAiB,EAAE,EAAE,MAAM;IAC5D,MAAM,WAAW,QAAQ,KAAK,CAAC;IAE/B,OAAO;QACL,kBAAkB,SAAS,KAAK,CAAC,CAAA,IAAK,EAAE,MAAM,GAAG;QACjD,gBAAgB,YAAY,QAAQ,MAAM;QAC1C,eAAe,YAAY,QAAQ,MAAM,GAAG;IAC9C;AACF;AAEO,MAAM,iBAAiB,CAAC;IAC7B,4BAA4B;IAC5B,MAAM,WAAW,QACd,OAAO,CAAC,mBAAmB,CAAC,OAAO;QAClC,sDAAsD;QACtD,OAAO,GAAG,GAAG,oCAAoC,CAAC;IACpD,GACC,OAAO,CAAC,cAAc;IAEzB,OAAO;AACT"}},
    {"offset": {"line": 627, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/features/ContentEnhancer/index.tsx"],"sourcesContent":["// src/components/features/ContentEnhancer/index.tsx\n// Enhanced content creator focused on making content compelling and accessible\n\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { CONTENT_GUIDELINES, validateContent } from './contentGuidelines';\n\n// Function to add transitions between paragraphs\nconst addTransitions = (content: string) => {\n  const transitions = [\n    'Building on this foundation',\n    'This leads us to',\n    'Understanding this concept',\n    'Taking this further',\n    'This reveals why',\n    'Here\\'s how this works'\n  ];\n\n  // Split content into paragraphs\n  const paragraphs = content.split('\\n\\n');\n  \n  // Add transitions between paragraphs\n  for (let i = 1; i < paragraphs.length; i++) {\n    const randomTransition = transitions[Math.floor(Math.random() * transitions.length)];\n    paragraphs[i] = `${randomTransition}, ${paragraphs[i].toLowerCase()}`;\n  }\n\n  return paragraphs.join('\\n\\n');\n};\n\nconst ContentEnhancer = () => {\n  const [selectedTool, setSelectedTool] = useState(null);\n  \n  const ENHANCEMENT_TOOLS = {\n    'Content Enhancer': {\n      description: 'Make content compelling and accessible',\n      capabilities: [\n        'Clear value communication',\n        'Engaging storytelling',\n        'Audience-focused language'\n      ]\n    },\n    'Research Assistant': {\n      description: 'Find relevant statistics and insights',\n      capabilities: [\n        'Industry stats lookup',\n        'Market trend data',\n        'ROI metrics'\n      ]\n    },\n    'Social Optimizer': {\n      description: 'Create social-ready content',\n      capabilities: [\n        'Key takeaway extraction',\n        'Post suggestions',\n        'Hashtag recommendations'\n      ]\n    }\n  };\n\n  const WritingEnhancementPanel = () => {\n    const [content, setContent] = useState('');\n    const [analysis, setAnalysis] = useState(null);\n  \n    const enhanceContent = async () => {\n      // Check content structure\n      const analysis = validateContent(content);\n      \n      if (analysis.needsRevision) {\n        // Transform lists into narrative flow\n        let enhanced = content\n          .replace(/^[-*•]\\s(.+)$/gm, (match, p1) => `This capability ${p1.toLowerCase()} by...`)\n          .replace(/\\n\\n[-*•]/g, '\\n\\nAdditionally, ');\n          \n        // Add transitions\n        enhanced = addTransitions(enhanced);\n        \n        return enhanced;\n      }\n      \n      return content;\n    };\n  \n    return (\n      <div className=\"space-y-4\">\n        <textarea \n          value={content}\n          onChange={(e) => setContent(e.target.value)}\n          className=\"w-full min-h-[200px] p-4 border rounded\"\n        />\n        \n        {analysis?.needsRevision && (\n          <div className=\"p-4 bg-yellow-50 rounded\">\n            <p className=\"text-sm text-yellow-800\">\n              Content contains too many lists. Consider converting some to narrative paragraphs.\n            </p>\n          </div>\n        )}\n        \n        <button \n          onClick={enhanceContent}\n          className=\"px-4 py-2 bg-blue-600 text-white rounded\"\n        >\n          Enhance Content\n        </button>\n      </div>\n    );\n  };\n\n  const ResearchPanel = () => (\n    <Card>\n      <CardHeader>\n        <CardTitle>Research Assistant</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n              What are you looking for?\n            </label>\n            <input\n              type=\"text\"\n              className=\"w-full p-2 border rounded\"\n              placeholder=\"e.g., marketing automation stats, industry trends...\"\n            />\n          </div>\n          <button className=\"w-full p-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\n            🔍 Find Statistics & Research\n          </button>\n          \n          <div className=\"p-4 bg-slate-50 rounded\">\n            <h4 className=\"font-medium mb-2\">Latest Industry Stats:</h4>\n            <div className=\"space-y-3\">\n              <div className=\"p-3 bg-white rounded border\">\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <p className=\"font-medium\">2024 Marketing Report</p>\n                    <p className=\"text-sm text-slate-600\">\n                      \"73% of B2B buyers rely on content for purchase decisions\"\n                    </p>\n                  </div>\n                  <button className=\"text-blue-600 hover:text-blue-700\">Add</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const SocialPanel = () => (\n    <Card>\n      <CardHeader>\n        <CardTitle>Social Content Generator</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n              Source Content\n            </label>\n            <textarea\n              className=\"w-full p-2 border rounded\"\n              rows={4}\n              placeholder=\"Paste your content to generate social posts...\"\n            />\n          </div>\n          <button className=\"w-full p-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\n            ✨ Generate Social Posts\n          </button>\n          \n          <div className=\"p-4 bg-slate-50 rounded\">\n            <h4 className=\"font-medium mb-2\">Suggested Posts:</h4>\n            <div className=\"space-y-3\">\n              <div className=\"p-3 bg-white rounded border\">\n                <p className=\"text-sm mb-2\">LinkedIn Post:</p>\n                <p className=\"text-slate-600\">\n                  [Generated post preview]\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  const content = (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        {Object.entries(ENHANCEMENT_TOOLS).map(([tool, details]) => (\n          <Card\n            key={tool}\n            className={`cursor-pointer hover:border-blue-300 ${\n              selectedTool === tool ? 'border-blue-600 bg-blue-50' : ''\n            }`}\n            onClick={() => setSelectedTool(tool)}\n          >\n            <CardContent className=\"pt-6\">\n              <h3 className=\"font-medium mb-2\">{tool}</h3>\n              <p className=\"text-sm text-slate-600 mb-4\">{details.description}</p>\n              <div className=\"space-y-1\">\n                {details.capabilities.map((capability, index) => (\n                  <div key={index} className=\"flex items-center gap-2 text-xs text-slate-600\">\n                    <span>✨</span>\n                    <span>{capability}</span>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {selectedTool && (\n        <>\n          {selectedTool === 'Content Enhancer' && <WritingEnhancementPanel />}\n          {selectedTool === 'Research Assistant' && <ResearchPanel />}\n          {selectedTool === 'Social Optimizer' && <SocialPanel />}\n        </>\n      )}\n    </div>\n  );\n\n  if (typeof ScreenTemplate !== 'undefined') {\n    return (\n      <ScreenTemplate\n        title=\"Enhance Your Content\"\n        subtitle=\"Make your content compelling and impactful\"\n        aiInsights={[\n          \"Your audience responds well to clear business benefits\",\n          \"Adding relevant stats increases engagement by 40%\",\n          \"Consider including customer success examples\"\n        ]}\n      >\n        {content}\n      </ScreenTemplate>\n    );\n  }\n\n   return (\n    <div className=\"max-w-7xl mx-auto p-8\">\n      <h1 className=\"text-2xl font-bold text-slate-900 mb-8\">Enhance Your Content</h1>\n      {/* Existing content rendering logic */}\n    </div>\n  );\n};\n\nexport default ContentEnhancer;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1147, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/features/ContentCreator/index.tsx"],"sourcesContent":["// src/components/features/ContentCreator/index.tsx\nimport React, { useState } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport ContentEnhancer from '../ContentEnhancer';\n\nconst ContentCreator = ({ contentType }) => {\n  const [step, setStep] = useState('outline');\n\n  const contentTypeDetails = {\n    'Blog Post': {\n      outline: ['Introduction', 'Key Points', 'Supporting Evidence', 'Conclusion'],\n      wordCount: '800-1200 words',\n      tips: ['Lead with value', 'Include industry examples', 'Add clear call-to-action']\n    },\n    'eBook': {\n      outline: ['Executive Summary', 'Problem Overview', 'Solution Details', 'Implementation', 'Case Studies'],\n      wordCount: '2500-5000 words',\n      tips: ['Break into chapters', 'Include visuals', 'Add downloadable resources']\n    },\n    'Case Study': {\n      outline: ['Challenge', 'Solution', 'Implementation', 'Results'],\n      wordCount: '800-1000 words',\n      tips: ['Include specific metrics', 'Quote customer feedback', 'Show clear ROI']\n    }\n  };\n\n  const OutlineStep = () => (\n    <Card>\n      <CardHeader>\n        <CardTitle>Content Outline</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          <div className=\"p-4 bg-slate-50 rounded\">\n            <h3 className=\"font-medium mb-2\">Suggested Structure</h3>\n            <div className=\"space-y-2\">\n              {contentTypeDetails[contentType]?.outline.map((section, index) => (\n                <div key={index} className=\"p-2 bg-white rounded border\">\n                  {section}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"p-4 bg-blue-50 rounded\">\n            <h3 className=\"font-medium mb-2\">Writing Tips</h3>\n            <div className=\"space-y-2\">\n              {contentTypeDetails[contentType]?.tips.map((tip, index) => (\n                <p key={index} className=\"text-sm text-slate-600\">• {tip}</p>\n              ))}\n            </div>\n          </div>\n          <button \n            onClick={() => setStep('write')}\n            className=\"w-full p-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n          >\n            Start Writing\n          </button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-xl font-semibold\">Create {contentType}</h2>\n        <div className=\"text-sm text-slate-600\">\n          Target length: {contentTypeDetails[contentType]?.wordCount}\n        </div>\n      </div>\n\n      {step === 'outline' ? <OutlineStep /> : <ContentEnhancer />}\n    </div>\n  );\n};\n\nexport default ContentCreator;"],"names":[],"mappings":"AAAA,mDAAmD;;;;;AACnD;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,WAAW,EAAE;IACrC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEjC,MAAM,qBAAqB;QACzB,aAAa;YACX,SAAS;gBAAC;gBAAgB;gBAAc;gBAAuB;aAAa;YAC5E,WAAW;YACX,MAAM;gBAAC;gBAAmB;gBAA6B;aAA2B;QACpF;QACA,SAAS;YACP,SAAS;gBAAC;gBAAqB;gBAAoB;gBAAoB;gBAAkB;aAAe;YACxG,WAAW;YACX,MAAM;gBAAC;gBAAuB;gBAAmB;aAA6B;QAChF;QACA,cAAc;YACZ,SAAS;gBAAC;gBAAa;gBAAY;gBAAkB;aAAU;YAC/D,WAAW;YACX,MAAM;gBAAC;gBAA4B;gBAA2B;aAAiB;QACjF;IACF;IAEA,MAAM,cAAc,kBAClB,qKAAC,kHAAA,CAAA,OAAI;;8BACH,qKAAC,kHAAA,CAAA,aAAU;8BACT,cAAA,qKAAC,kHAAA,CAAA,YAAS;kCAAC;;;;;;;;;;;8BAEb,qKAAC,kHAAA,CAAA,cAAW;8BACV,cAAA,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCAAG,WAAU;kDAAmB;;;;;;kDACjC,qKAAC;wCAAI,WAAU;kDACZ,kBAAkB,CAAC,YAAY,EAAE,QAAQ,IAAI,CAAC,SAAS,sBACtD,qKAAC;gDAAgB,WAAU;0DACxB;+CADO;;;;;;;;;;;;;;;;0CAMhB,qKAAC;gCAAI,WAAU;;kDACb,qKAAC;wCAAG,WAAU;kDAAmB;;;;;;kDACjC,qKAAC;wCAAI,WAAU;kDACZ,kBAAkB,CAAC,YAAY,EAAE,KAAK,IAAI,CAAC,KAAK,sBAC/C,qKAAC;gDAAc,WAAU;;oDAAyB;oDAAG;;+CAA7C;;;;;;;;;;;;;;;;0CAId,qKAAC;gCACC,SAAS,IAAM,QAAQ;gCACvB,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;IAQT,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBAAG,WAAU;;4BAAwB;4BAAQ;;;;;;;kCAC9C,qKAAC;wBAAI,WAAU;;4BAAyB;4BACtB,kBAAkB,CAAC,YAAY,EAAE;;;;;;;;;;;;;YAIpD,SAAS,0BAAY,qKAAC;;;;qCAAiB,qKAAC,mJAAA,CAAA,UAAe;;;;;;;;;;;AAG9D;uCAEe"}},
    {"offset": {"line": 1369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/features/CreationHub/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useContent } from '../../../context/ContentContext';\nimport ContentCreator from '../ContentCreator';\n\nconst CreationHub = () => {\n  const { selectedContentTypes } = useContent();\n  console.log('CreationHub received:', selectedContentTypes);\n  const [activeContent, setActiveContent] = useState<string | null>(null);\n\n  // If a specific content type is being created, show its creator\n  if (activeContent) {\n    return <ContentCreator contentType={activeContent} />;\n  }\n\n  // No content types selected\n  if (selectedContentTypes.length === 0) {\n    return (\n      <div className=\"max-w-4xl mx-auto p-8 text-center\">\n        <h2 className=\"text-2xl font-bold mb-4\">No Content Types Selected</h2>\n        <p className=\"text-slate-600 mb-6\">\n          Please go back to the Content Strategy step and choose your content mix.\n        </p>\n        <button \n          onClick={() => window.history.back()}\n          className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n        >\n          Return to Content Strategy\n        </button>\n      </div>\n    );\n  }\n\n  // Show list of selected content types to create\n  return (\n    <div className=\"max-w-4xl mx-auto p-8\">\n      <h2 className=\"text-2xl font-bold mb-6\">Your Content Creation Queue</h2>\n      <div className=\"space-y-4\">\n        {selectedContentTypes.map(type => (\n          <div \n            key={type} \n            className=\"p-6 border rounded-lg flex justify-between items-center hover:bg-slate-50 transition-colors\"\n          >\n            <div>\n              <h3 className=\"text-lg font-semibold\">{type}</h3>\n              <p className=\"text-sm text-slate-600\">Ready to create</p>\n            </div>\n            <button\n              onClick={() => setActiveContent(type)}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors\"\n            >\n              Create {type} →\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CreationHub;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,cAAc;IAClB,MAAM,EAAE,oBAAoB,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,aAAU,AAAD;IAC1C,QAAQ,GAAG,CAAC,yBAAyB;IACrC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAElE,gEAAgE;IAChE,IAAI,eAAe;QACjB,qBAAO,qKAAC,kJAAA,CAAA,UAAc;YAAC,aAAa;;;;;;IACtC;IAEA,4BAA4B;IAC5B,IAAI,qBAAqB,MAAM,KAAK,GAAG;QACrC,qBACE,qKAAC;YAAI,WAAU;;8BACb,qKAAC;oBAAG,WAAU;8BAA0B;;;;;;8BACxC,qKAAC;oBAAE,WAAU;8BAAsB;;;;;;8BAGnC,qKAAC;oBACC,SAAS,IAAM,OAAO,OAAO,CAAC,IAAI;oBAClC,WAAU;8BACX;;;;;;;;;;;;IAKP;IAEA,gDAAgD;IAChD,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,qKAAC;gBAAI,WAAU;0BACZ,qBAAqB,GAAG,CAAC,CAAA,qBACxB,qKAAC;wBAEC,WAAU;;0CAEV,qKAAC;;kDACC,qKAAC;wCAAG,WAAU;kDAAyB;;;;;;kDACvC,qKAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;0CAExC,qKAAC;gCACC,SAAS,IAAM,iBAAiB;gCAChC,WAAU;;oCACX;oCACS;oCAAK;;;;;;;;uBAXV;;;;;;;;;;;;;;;;AAkBjB;uCAEe"}},
    {"offset": {"line": 1510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1516, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/pages/creation-hub.tsx"],"sourcesContent":["// pages/creation-hub.tsx\nimport React from 'react';\nimport { ContentProvider } from '../context/ContentContext';\nimport ContentStrategyModule from '../components/features/ContentStrategyModule';\nimport CreationHub from '../components/features/CreationHub';\n\nexport default function CreationHubPage() {\n  return (\n    <ContentProvider>\n      <CreationHub />\n    </ContentProvider>\n  );\n}"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AAEzB;AAEA;;;;AAEe,SAAS;IACtB,qBACE,qKAAC,0HAAA,CAAA,kBAAe;kBACd,cAAA,qKAAC,+IAAA,CAAA,UAAW;;;;;;;;;;AAGlB"}},
    {"offset": {"line": 1539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}