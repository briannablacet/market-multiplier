{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/components/ui/card.tsx"],"sourcesContent":["// src/components/ui/card.tsx\nexport function Card({ children, className = '', ...props }) {\n    return (\n      <div className={`bg-white rounded-lg shadow ${className}`} {...props}>\n        {children}\n      </div>\n    );\n  }\n  \n  export function CardHeader({ children, className = '', ...props }) {\n    return <div className={`p-6 pb-0 ${className}`} {...props}>{children}</div>;\n  }\n  \n  export function CardTitle({ children, className = '', ...props }) {\n    return <h3 className={`text-lg font-medium ${className}`} {...props}>{children}</h3>;\n  }\n  \n  export function CardContent({ children, className = '', ...props }) {\n    return <div className={`p-6 ${className}`} {...props}>{children}</div>;\n  }"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;;;AACtB,SAAS,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IACvD,qBACE,0JAAC;QAAI,WAAW,CAAC,2BAA2B,EAAE,WAAW;QAAG,GAAG,KAAK;kBACjE;;;;;;AAGP;KANc;AAQP,SAAS,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC/D,qBAAO,0JAAC;QAAI,WAAW,CAAC,SAAS,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AAC9D;MAFgB;AAIT,SAAS,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAC9D,qBAAO,0JAAC;QAAG,WAAW,CAAC,oBAAoB,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACxE;MAFgB;AAIT,SAAS,YAAY,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,GAAG,OAAO;IAChE,qBAAO,0JAAC;QAAI,WAAW,CAAC,IAAI,EAAE,WAAW;QAAG,GAAG,KAAK;kBAAG;;;;;;AACzD;MAFgB"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program-restore-copy/marketing-program/src/components/features/MarketingWalkthrough/components/ContentStrategyStep/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\n\nconst ContentStrategyStep = () => {\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const [activeContent, setActiveContent] = useState(null);\n  \n  // Here's Where the Magic Happens: Our Content Mix Options\n  const CONTENT_TYPES = {\n    'Thought Leadership': {\n      description: 'Build authority through expert insights',\n      formats: ['Blog Posts', 'Whitepapers', 'Industry Reports'],\n      effort: 'High',\n      frequency: 'Weekly',\n      aiSupport: ['Topic Research', 'Outline Generation', 'SEO Optimization']\n    },\n    'Case Studies': {\n      description: 'Showcase customer success stories',\n      formats: ['Written', 'Video', 'Infographic'],\n      effort: 'Medium',\n      frequency: 'Monthly',\n      aiSupport: ['Structure Templates', 'ROI Calculation', 'Story Arc']\n    },\n    'Influencer Content': {\n      description: 'Leverage industry thought leaders',\n      formats: ['Collaborations', 'Takeovers', 'Joint Content'],\n      effort: 'Medium',\n      frequency: 'Monthly',\n      aiSupport: ['Influencer Matching', 'Campaign Ideas', 'ROI Tracking']\n    },\n    'Social Media': {\n      description: 'Engage audience across platforms',\n      formats: ['Posts', 'Stories', 'Live Sessions'],\n      effort: 'Low',\n      frequency: 'Daily',\n      aiSupport: ['Post Ideas', 'Hashtag Research', 'Engagement Analysis']\n    },\n    'Lead Magnets': {\n      description: 'Generate qualified leads',\n      formats: ['Ebooks', 'Templates', 'Toolkits'],\n      effort: 'High',\n      frequency: 'Quarterly',\n      aiSupport: ['Topic Selection', 'Content Structure', 'CTA Optimization']\n    },\n    'Email Campaigns': {\n      description: 'Nurture and convert prospects',\n      formats: ['Newsletters', 'Drip Campaigns', 'Announcements'],\n      effort: 'Medium',\n      frequency: 'Weekly',\n      aiSupport: ['Subject Lines', 'Email Flow', 'Segmentation']\n    }\n  };\n\n  const ContentTypeCard = ({ type, details, isSelected, onClick }) => (\n    <div\n      className={`p-6 border rounded-lg cursor-pointer transition-colors ${\n        isSelected ? 'border-blue-600 bg-blue-50' : 'border-slate-200'\n      }`}\n      onClick={onClick}\n    >\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-slate-900\">{type}</h3>\n          <p className=\"mt-2 text-sm text-slate-600\">{details.description}</p>\n        </div>\n        <div className={`w-6 h-6 rounded-full border flex items-center justify-center ${\n          isSelected ? 'border-blue-600 bg-blue-600' : 'border-slate-300'\n        }`}>\n          {isSelected && <span className=\"text-white\">✓</span>}\n        </div>\n      </div>\n      <div className=\"mt-4 flex flex-wrap gap-2\">\n        {details.formats.map(format => (\n          <span key={format} className=\"px-2 py-1 bg-slate-100 rounded text-sm\">\n            {format}\n          </span>\n        ))}\n      </div>\n      <div className=\"mt-4 grid grid-cols-2 gap-4\">\n        <div>\n          <p className=\"text-xs text-slate-500\">Effort Level</p>\n          <p className=\"text-sm font-medium text-slate-700\">{details.effort}</p>\n        </div>\n        <div>\n          <p className=\"text-xs text-slate-500\">Frequency</p>\n          <p className=\"text-sm font-medium text-slate-700\">{details.frequency}</p>\n        </div>\n      </div>\n      <div className=\"mt-4\">\n        <p className=\"text-xs text-slate-500 mb-2\">AI Assistance Available:</p>\n        <div className=\"flex flex-wrap gap-2\">\n          {details.aiSupport.map(feature => (\n            <span key={feature} className=\"px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs\">\n              ✨ {feature}\n            </span>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const ContentCreationPanel = ({ contentType, details }) => {\n    const [step, setStep] = useState('plan');\n    \n    return (\n      <Card className=\"mt-6\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <span>Create {contentType}</span>\n            <button \n              onClick={() => setActiveContent(null)}\n              className=\"text-sm text-slate-500 hover:text-slate-700\"\n            >\n              ← Back to Types\n            </button>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-6\">\n            <div className=\"flex gap-2 border-b\">\n              {['plan', 'create', 'review'].map(stepName => (\n                <button\n                  key={stepName}\n                  onClick={() => setStep(stepName)}\n                  className={`px-4 py-2 ${\n                    step === stepName \n                      ? 'border-b-2 border-blue-600 text-blue-600' \n                      : 'text-slate-600'\n                  }`}\n                >\n                  {stepName.charAt(0).toUpperCase() + stepName.slice(1)}\n                </button>\n              ))}\n            </div>\n\n            {step === 'plan' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold\">Planning Assistant</h3>\n                <div className=\"grid gap-4\">\n                  {details.aiSupport.map(feature => (\n                    <button\n                      key={feature}\n                      className=\"p-4 text-left border rounded-lg hover:border-blue-300\"\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"text-lg\">✨</span>\n                        <span>{feature}</span>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {step === 'create' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold\">Content Creation</h3>\n                <div className=\"grid gap-4\">\n                  {details.formats.map(format => (\n                    <button\n                      key={format}\n                      className=\"p-4 text-left border rounded-lg hover:border-blue-300\"\n                    >\n                      <div className=\"flex items-center justify-between\">\n                        <span>{format}</span>\n                        <span className=\"text-sm text-slate-500\">Create →</span>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {step === 'review' && (\n              <div className=\"space-y-4\">\n                <h3 className=\"font-semibold\">Quality Check</h3>\n                <div className=\"p-4 border rounded-lg bg-slate-50\">\n                  <p className=\"text-sm text-slate-600\">\n                    AI assistant will review your content for:\n                  </p>\n                  <ul className=\"mt-2 space-y-2 text-sm\">\n                    <li>• Brand voice consistency</li>\n                    <li>• Message clarity</li>\n                    <li>• Target audience alignment</li>\n                    <li>• SEO optimization</li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  };\n\n  const content = (\n    <div className=\"space-y-6\">\n      {!activeContent ? (\n        <>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {Object.entries(CONTENT_TYPES).map(([type, details]) => (\n              <ContentTypeCard\n                key={type}\n                type={type}\n                details={details}\n                isSelected={selectedTypes.includes(type)}\n                onClick={() => {\n                  if (selectedTypes.includes(type)) {\n                    setActiveContent(type);\n                  } else {\n                    setSelectedTypes(prev => [...prev, type]);\n                  }\n                }}\n              />\n            ))}\n          </div>\n        </>\n      ) : (\n        <ContentCreationPanel \n          contentType={activeContent} \n          details={CONTENT_TYPES[activeContent]} \n        />\n      )}\n    </div>\n  );\n\n  // If being used in a walkthrough, wrap with ScreenTemplate\n  if (typeof ScreenTemplate !== 'undefined') {\n    return (\n      <ScreenTemplate\n        title=\"Choose Your Content Mix\"\n        subtitle=\"Select and customize your marketing content strategy\"\n        aiInsights={[\n          \"Influencer partnerships could amplify your reach by 3x\",\n          \"Your audience engages best with technical deep-dives\",\n          \"Mix of educational and thought leadership content recommended\"\n        ]}\n      >\n        {content}\n      </ScreenTemplate>\n    );\n  }\n\n  // Standalone version\n  return (\n    <div className=\"max-w-7xl mx-auto p-8\">\n      <h1 className=\"text-2xl font-bold text-slate-900 mb-8\">Choose Your Content Mix</h1>\n      {content}\n    </div>\n  );\n};\n\nexport default ContentStrategyStep;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}