{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/briannablacet/Documents/GitHub/marketing-program/marketing-program/src/components/features/MarketingWalkthrough/components/ChannelSelectionStep/index.tsx"],"sourcesContent":["// ChannelSelectionStep/index.tsx\nimport React, { useState } from 'react';\nimport { Card } from '@/components/ui/card';\n\nconst channels = [\n  {\n    name: 'Content Marketing',\n    description: 'Build authority through valuable content',\n    activities: ['Blog Posts', 'Whitepapers', 'Case Studies']\n  },\n  {\n    name: 'Digital Advertising',\n    description: 'Reach target audience through paid channels',\n    activities: ['Search Ads', 'Display Ads', 'Social Ads']\n  },\n  {\n    name: 'Events',\n    description: 'Connect with prospects face-to-face',\n    activities: ['Trade Shows', 'Webinars', 'Workshops']\n  },\n  {\n    name: 'Social Media',\n    description: 'Engage and build community',\n    activities: ['LinkedIn', 'Twitter', 'Community Management']\n  }\n];\n\nconst ChannelSelectionStep = () => {\n  const [selectedChannels, setSelectedChannels] = useState<string[]>([]);\n\n  const toggleChannel = (channelName: string) => {\n    setSelectedChannels(prev => \n      prev.includes(channelName)\n        ? prev.filter(name => name !== channelName)\n        : [...prev, channelName]\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-2 gap-4\">\n        {channels.map(channel => (\n          <Card\n            key={channel.name}\n            className={`p-6 cursor-pointer ${\n              selectedChannels.includes(channel.name)\n                ? 'border-blue-500 bg-blue-50'\n                : ''\n            }`}\n            onClick={() => toggleChannel(channel.name)}\n          >\n            <h3 className=\"font-semibold mb-2\">{channel.name}</h3>\n            <p className=\"text-gray-600 text-sm mb-4\">{channel.description}</p>\n            <div className=\"flex flex-wrap gap-2\">\n              {channel.activities.map(activity => (\n                <span\n                  key={activity}\n                  className=\"px-2 py-1 bg-white rounded text-sm border\"\n                >\n                  {activity}\n                </span>\n              ))}\n            </div>\n          </Card>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ChannelSelectionStep;"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AACjC;;;;;;;;;;AAGA,MAAM,WAAW;IACf;QACE,MAAM;QACN,aAAa;QACb,YAAY;YAAC;YAAc;YAAe;SAAe;IAC3D;IACA;QACE,MAAM;QACN,aAAa;QACb,YAAY;YAAC;YAAc;YAAe;SAAa;IACzD;IACA;QACE,MAAM;QACN,aAAa;QACb,YAAY;YAAC;YAAe;YAAY;SAAY;IACtD;IACA;QACE,MAAM;QACN,aAAa;QACb,YAAY;YAAC;YAAY;YAAW;SAAuB;IAC7D;CACD;AAED,MAAM,uBAAuB;;IAC3B,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,0HAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAErE,MAAM,gBAAgB,CAAC;QACrB,oBAAoB,CAAA,OAClB,KAAK,QAAQ,CAAC,eACV,KAAK,MAAM,CAAC,CAAA,OAAQ,SAAS,eAC7B;mBAAI;gBAAM;aAAY;IAE9B;IAEA,qBACE,0JAAC;QAAI,WAAU;kBACb,cAAA,0JAAC;YAAI,WAAU;sBACZ,SAAS,GAAG,CAAC,CAAA,wBACZ,0JAAC;oBAEC,WAAW,CAAC,mBAAmB,EAC7B,iBAAiB,QAAQ,CAAC,QAAQ,IAAI,IAClC,+BACA,IACJ;oBACF,SAAS,IAAM,cAAc,QAAQ,IAAI;;sCAEzC,0JAAC;4BAAG,WAAU;sCAAsB,QAAQ,IAAI;;;;;;sCAChD,0JAAC;4BAAE,WAAU;sCAA8B,QAAQ,WAAW;;;;;;sCAC9D,0JAAC;4BAAI,WAAU;sCACZ,QAAQ,UAAU,CAAC,GAAG,CAAC,CAAA,yBACtB,0JAAC;oCAEC,WAAU;8CAET;mCAHI;;;;;;;;;;;mBAbN,QAAQ,IAAI;;;;;;;;;;;;;;;AAyB7B;GAzCM;KAAA;uCA2CS"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}